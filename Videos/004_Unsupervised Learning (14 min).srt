
1
00:00:00,038 --> 00:00:01,055
In this video, we'll talk about

2
00:00:01,067 --> 00:00:02,069
the second major type of machine

3
00:00:03,000 --> 00:00:05,003
learning problem, called Unsupervised Learning.

4
00:00:06,029 --> 00:00:08,050
In the last video, we talked about Supervised Learning.

5
00:00:09,025 --> 00:00:10,069
Back then, recall data sets

6
00:00:11,001 --> 00:00:12,067
that look like this, where each

7
00:00:12,089 --> 00:00:15,015
example was labeled either

8
00:00:15,060 --> 00:00:16,089
as a positive or negative example,

9
00:00:17,053 --> 00:00:19,080
whether it was a benign or a malignant tumor.

10
00:00:20,085 --> 00:00:21,092
So for each example in Supervised

11
00:00:22,041 --> 00:00:24,026
Learning, we were told explicitly what

12
00:00:24,044 --> 00:00:25,076
is the so-called right answer,

13
00:00:26,048 --> 00:00:27,057
whether it's benign or malignant.

14
00:00:28,055 --> 00:00:30,021
In Unsupervised Learning, we're given

15
00:00:30,053 --> 00:00:31,071
data that looks different

16
00:00:31,094 --> 00:00:32,090
than data that looks like

17
00:00:33,018 --> 00:00:34,060
this that doesn't have

18
00:00:34,071 --> 00:00:35,092
any labels or that all

19
00:00:36,013 --> 00:00:37,046
has the same label or really no labels.

20
00:00:39,067 --> 00:00:40,074
So we're given the data set and

21
00:00:40,097 --> 00:00:42,046
we're not told what to

22
00:00:42,056 --> 00:00:43,028
do with it and we're not

23
00:00:43,064 --> 00:00:44,079
told what each data point is.

24
00:00:45,028 --> 00:00:47,018
Instead we're just told, here is a data set.

25
00:00:47,086 --> 00:00:49,064
Can you find some structure in the data?

26
00:00:50,047 --> 00:00:51,067
Given this data set, an

27
00:00:52,035 --> 00:00:53,093
Unsupervised Learning algorithm might decide that

28
00:00:54,006 --> 00:00:56,009
the data lives in two different clusters.

29
00:00:56,079 --> 00:00:57,096
And so there's one cluster

30
00:00:59,011 --> 00:00:59,090
and there's a different cluster.

31
00:01:01,010 --> 00:01:02,071
And yes, Supervised Learning algorithm may

32
00:01:03,003 --> 00:01:05,006
break these data into these two separate clusters.

33
00:01:06,040 --> 00:01:08,000
So this is called a clustering algorithm.

34
00:01:08,085 --> 00:01:10,031
And this turns out to be used in many places.

35
00:01:11,093 --> 00:01:13,031
One example where clustering

36
00:01:13,053 --> 00:01:14,085
is used is in Google

37
00:01:15,006 --> 00:01:16,015
News and if you have not

38
00:01:16,035 --> 00:01:17,031
seen this before, you can actually

39
00:01:18,020 --> 00:01:19,004
go to this URL news.google.com

40
00:01:19,082 --> 00:01:20,045
to take a look.

41
00:01:21,028 --> 00:01:22,096
What Google News does is everyday

42
00:01:23,048 --> 00:01:24,021
it goes and looks at tens

43
00:01:24,046 --> 00:01:25,043
of thousands or hundreds of

44
00:01:25,071 --> 00:01:26,073
thousands of new stories on the

45
00:01:26,079 --> 00:01:29,040
web and it groups them into cohesive news stories.

46
00:01:30,073 --> 00:01:31,068
For example, let's look here.

47
00:01:33,037 --> 00:01:35,037
The URLs here link

48
00:01:35,090 --> 00:01:37,026
to different news stories

49
00:01:38,001 --> 00:01:40,010
about the BP Oil Well story.

50
00:01:41,029 --> 00:01:42,015
So, let's click on

51
00:01:42,026 --> 00:01:43,009
one of these URL's and we'll

52
00:01:43,054 --> 00:01:44,078
click on one of these URL's.

53
00:01:45,009 --> 00:01:46,096
What I'll get to is a web page like this.

54
00:01:47,020 --> 00:01:48,039
Here's a Wall Street

55
00:01:48,059 --> 00:01:50,018
Journal article about, you know, the BP

56
00:01:51,010 --> 00:01:52,053
Oil Well Spill stories of

57
00:01:52,092 --> 00:01:54,034
"BP Kills Macondo",

58
00:01:54,059 --> 00:01:55,070
which is a name of the

59
00:01:55,098 --> 00:01:57,095
spill and if you

60
00:01:58,001 --> 00:01:59,035
click on a different URL

61
00:02:00,068 --> 00:02:02,050
from that group then you might get the different story.

62
00:02:02,095 --> 00:02:04,076
Here's the CNN story about a

63
00:02:04,081 --> 00:02:06,009
game, the BP Oil Spill,

64
00:02:07,009 --> 00:02:08,018
and if you click on yet

65
00:02:08,074 --> 00:02:10,099
a third link, then you might get a different story.

66
00:02:11,043 --> 00:02:13,037
Here's the UK Guardian story

67
00:02:13,093 --> 00:02:15,050
about the BP Oil Spill.

68
00:02:16,053 --> 00:02:17,078
So what Google News has done

69
00:02:17,099 --> 00:02:19,043
is look for tens of thousands of

70
00:02:19,049 --> 00:02:22,016
news stories and automatically cluster them together.

71
00:02:23,003 --> 00:02:24,065
So, the news stories that are all

72
00:02:25,008 --> 00:02:27,000
about the same topic get displayed together.

73
00:02:27,021 --> 00:02:29,016
It turns out that

74
00:02:29,037 --> 00:02:31,002
clustering algorithms and Unsupervised Learning

75
00:02:31,053 --> 00:02:33,055
algorithms are used in many other problems as well.

76
00:02:35,031 --> 00:02:36,068
Here's one on understanding genomics.

77
00:02:38,027 --> 00:02:40,050
Here's an example of DNA microarray data.

78
00:02:40,099 --> 00:02:42,022
The idea is put

79
00:02:42,043 --> 00:02:44,036
a group of different individuals and

80
00:02:44,050 --> 00:02:45,059
for each of them, you measure

81
00:02:46,009 --> 00:02:48,058
how much they do or do not have a certain gene.

82
00:02:49,005 --> 00:02:51,063
Technically you measure how much certain genes are expressed.

83
00:02:52,000 --> 00:02:54,018
So these colors, red, green,

84
00:02:54,093 --> 00:02:56,021
gray and so on, they

85
00:02:56,034 --> 00:02:57,050
show the degree to which

86
00:02:57,078 --> 00:02:59,043
different individuals do or

87
00:02:59,050 --> 00:03:01,027
do not have a specific gene.

88
00:03:02,050 --> 00:03:03,040
And what you can do is then

89
00:03:03,061 --> 00:03:05,006
run a clustering algorithm to group

90
00:03:05,037 --> 00:03:07,013
individuals into different categories

91
00:03:07,078 --> 00:03:08,081
or into different types of people.

92
00:03:10,022 --> 00:03:11,065
So this is Unsupervised Learning because

93
00:03:11,093 --> 00:03:14,000
we're not telling the algorithm in advance

94
00:03:14,059 --> 00:03:15,068
that these are type 1 people,

95
00:03:16,012 --> 00:03:17,041
those are type 2 persons, those

96
00:03:17,056 --> 00:03:18,065
are type 3 persons and so

97
00:03:19,061 --> 00:03:22,038
on and instead what were saying is yeah here's a bunch of data.

98
00:03:23,011 --> 00:03:24,003
I don't know what's in this data.

99
00:03:24,075 --> 00:03:25,087
I don't know who's and what type.

100
00:03:26,015 --> 00:03:26,093
I don't even know what the different

101
00:03:27,025 --> 00:03:28,047
types of people are, but can

102
00:03:28,061 --> 00:03:30,021
you automatically find structure in

103
00:03:30,036 --> 00:03:31,025
the data from the you automatically

104
00:03:32,018 --> 00:03:33,062
cluster the individuals into these types

105
00:03:33,087 --> 00:03:35,049
that I don't know in advance?

106
00:03:35,088 --> 00:03:37,061
Because we're not giving the algorithm

107
00:03:38,015 --> 00:03:40,013
the right answer for the

108
00:03:40,037 --> 00:03:41,027
examples in my data

109
00:03:41,059 --> 00:03:43,009
set, this is Unsupervised Learning.

110
00:03:44,028 --> 00:03:47,003
Unsupervised Learning or clustering is used for a bunch of other applications.

111
00:03:48,034 --> 00:03:50,034
It's used to organize large computer clusters.

112
00:03:51,038 --> 00:03:52,053
I had some friends looking at

113
00:03:52,068 --> 00:03:53,096
large data centers, that is

114
00:03:54,018 --> 00:03:55,096
large computer clusters and trying

115
00:03:56,022 --> 00:03:57,046
to figure out which machines tend to

116
00:03:57,059 --> 00:03:59,012
work together and if

117
00:03:59,019 --> 00:04:00,027
you can put those machines together,

118
00:04:01,009 --> 00:04:03,021
you can make your data center work more efficiently.

119
00:04:04,081 --> 00:04:06,081
This second application is on social network analysis.

120
00:04:07,088 --> 00:04:09,022
So given knowledge about which friends

121
00:04:09,062 --> 00:04:10,084
you email the most or

122
00:04:10,087 --> 00:04:12,015
given your Facebook friends or

123
00:04:12,018 --> 00:04:14,015
your Google+ circles, can

124
00:04:14,028 --> 00:04:16,037
we automatically identify which are

125
00:04:16,044 --> 00:04:17,094
cohesive groups of friends,

126
00:04:18,045 --> 00:04:19,042
also which are groups of people

127
00:04:20,023 --> 00:04:21,000
that all know each other?

128
00:04:22,054 --> 00:04:22,087
Market segmentation.

129
00:04:24,068 --> 00:04:26,077
Many companies have huge databases of customer information.

130
00:04:27,069 --> 00:04:28,041
So, can you look at this

131
00:04:28,050 --> 00:04:30,000
customer data set and automatically

132
00:04:30,074 --> 00:04:32,033
discover market segments and automatically

133
00:04:33,033 --> 00:04:35,029
group your customers into different

134
00:04:35,081 --> 00:04:37,039
market segments so that

135
00:04:37,070 --> 00:04:39,049
you can automatically and more

136
00:04:39,064 --> 00:04:41,057
efficiently sell or market

137
00:04:41,088 --> 00:04:43,025
your different market segments together?

138
00:04:44,025 --> 00:04:45,057
Again, this is Unsupervised Learning

139
00:04:45,081 --> 00:04:46,072
because we have all this

140
00:04:46,089 --> 00:04:48,033
customer data, but we don't

141
00:04:48,058 --> 00:04:49,070
know in advance what are the

142
00:04:49,079 --> 00:04:51,026
market segments and for

143
00:04:51,043 --> 00:04:52,056
the customers in our data

144
00:04:52,066 --> 00:04:53,058
set, you know, we don't know in

145
00:04:53,068 --> 00:04:54,069
advance who is in

146
00:04:54,080 --> 00:04:55,083
market segment one, who is

147
00:04:55,093 --> 00:04:57,080
in market segment two, and so on.

148
00:04:57,093 --> 00:05:00,062
But we have to let the algorithm discover all this just from the data.

149
00:05:01,097 --> 00:05:03,013
Finally, it turns out that Unsupervised

150
00:05:03,068 --> 00:05:05,062
Learning is also used for

151
00:05:06,008 --> 00:05:08,006
surprisingly astronomical data analysis

152
00:05:08,088 --> 00:05:10,038
and these clustering algorithms gives

153
00:05:10,057 --> 00:05:12,043
surprisingly interesting useful theories

154
00:05:12,089 --> 00:05:15,061
of how galaxies are born.

155
00:05:15,087 --> 00:05:17,062
All of these are examples of clustering,

156
00:05:18,039 --> 00:05:20,055
which is just one type of Unsupervised Learning.

157
00:05:21,052 --> 00:05:22,047
Let me tell you about another one.

158
00:05:23,019 --> 00:05:25,001
I'm gonna tell you about the cocktail party problem.

159
00:05:26,031 --> 00:05:28,026
So, you've been to cocktail parties before, right?

160
00:05:28,043 --> 00:05:30,007
Well, you can imagine there's a

161
00:05:30,030 --> 00:05:31,068
party, room full of people, all

162
00:05:31,087 --> 00:05:32,093
sitting around, all talking at the

163
00:05:32,097 --> 00:05:34,038
same time and there are

164
00:05:34,048 --> 00:05:36,023
all these overlapping voices because everyone

165
00:05:36,058 --> 00:05:37,092
is talking at the same time, and

166
00:05:38,006 --> 00:05:39,073
it is almost hard to hear the person in front of you.

167
00:05:40,068 --> 00:05:41,097
So maybe at a

168
00:05:42,001 --> 00:05:43,099
cocktail party with two people,

169
00:05:45,068 --> 00:05:46,067
two people talking at the same

170
00:05:46,076 --> 00:05:48,008
time, and it's a somewhat

171
00:05:48,074 --> 00:05:49,070
small cocktail party.

172
00:05:50,068 --> 00:05:51,062
And we're going to put two

173
00:05:51,088 --> 00:05:53,007
microphones in the room so

174
00:05:54,006 --> 00:05:55,063
there are microphones, and because

175
00:05:56,005 --> 00:05:57,043
these microphones are at two

176
00:05:57,056 --> 00:05:58,089
different distances from the

177
00:05:58,099 --> 00:06:01,025
speakers, each microphone records

178
00:06:01,082 --> 00:06:04,072
a different combination of these two speaker voices.

179
00:06:05,081 --> 00:06:06,097
Maybe speaker one is a

180
00:06:07,012 --> 00:06:08,031
little louder in microphone one

181
00:06:09,012 --> 00:06:10,068
and maybe speaker two is a

182
00:06:10,080 --> 00:06:12,035
little bit louder on microphone 2

183
00:06:12,056 --> 00:06:14,004
because the 2 microphones are

184
00:06:14,023 --> 00:06:15,094
at different positions relative to

185
00:06:16,039 --> 00:06:19,001
the 2 speakers, but each

186
00:06:19,025 --> 00:06:20,038
microphone would cause an overlapping

187
00:06:20,097 --> 00:06:22,058
combination of both speakers' voices.

188
00:06:23,095 --> 00:06:25,050
So here's an actual recording

189
00:06:26,051 --> 00:06:29,027
of two speakers recorded by a researcher.

190
00:06:29,074 --> 00:06:30,094
Let me play for you the

191
00:06:31,006 --> 00:06:32,075
first, what the first microphone sounds like.

192
00:06:33,056 --> 00:06:34,080
One (uno), two (dos),

193
00:06:35,006 --> 00:06:36,058
three (tres), four (cuatro), five

194
00:06:37,006 --> 00:06:38,055
(cinco), six (seis), seven (siete),

195
00:06:38,099 --> 00:06:40,061
eight (ocho), nine (nueve), ten (y diez).

196
00:06:41,061 --> 00:06:42,064
All right, maybe not the most interesting cocktail

197
00:06:43,000 --> 00:06:44,026
party, there's two people

198
00:06:44,062 --> 00:06:45,067
counting from one to ten

199
00:06:46,000 --> 00:06:47,087
in two languages but you know.

200
00:06:48,087 --> 00:06:49,075
What you just heard was the

201
00:06:49,081 --> 00:06:52,050
first microphone recording, here's the second recording.

202
00:06:57,043 --> 00:06:58,004
Uno (one), dos (two), tres (three), cuatro

203
00:06:58,006 --> 00:06:58,073
(four), cinco (five), seis (six), siete (seven),

204
00:06:59,016 --> 00:07:00,089
ocho (eight), nueve (nine) y diez (ten).

205
00:07:01,086 --> 00:07:02,085
So we can do, is take

206
00:07:03,037 --> 00:07:04,066
these two microphone recorders and give

207
00:07:04,098 --> 00:07:06,048
them to an Unsupervised Learning algorithm

208
00:07:07,000 --> 00:07:08,056
called the cocktail party algorithm,

209
00:07:08,077 --> 00:07:09,091
and tell the algorithm

210
00:07:10,044 --> 00:07:12,013
- find structure in this data for you.

211
00:07:12,025 --> 00:07:14,000
And what the algorithm will do

212
00:07:14,041 --> 00:07:15,073
is listen to these

213
00:07:15,098 --> 00:07:17,099
audio recordings and say, you

214
00:07:18,013 --> 00:07:19,001
know it sounds like the

215
00:07:19,036 --> 00:07:20,094
two audio recordings are being

216
00:07:21,024 --> 00:07:22,044
added together or that have being

217
00:07:22,067 --> 00:07:25,022
summed together to produce these recordings that we had.

218
00:07:25,099 --> 00:07:27,032
Moreover, what the cocktail party

219
00:07:27,070 --> 00:07:29,020
algorithm will do is separate

220
00:07:29,056 --> 00:07:30,081
out these two audio sources

221
00:07:31,048 --> 00:07:32,069
that were being added or being

222
00:07:33,000 --> 00:07:34,024
summed together to form other

223
00:07:34,041 --> 00:07:35,060
recordings and, in fact,

224
00:07:36,019 --> 00:07:38,062
here's the first output of the cocktail party algorithm.

225
00:07:39,079 --> 00:07:41,091
One, two, three, four,

226
00:07:42,058 --> 00:07:46,026
five, six, seven, eight, nine, ten.

227
00:07:47,062 --> 00:07:48,077
So, I separated out the English

228
00:07:49,024 --> 00:07:51,022
voice in one of the recordings.

229
00:07:52,045 --> 00:07:53,030
And here's the second of it.

230
00:07:53,037 --> 00:07:55,027
Uno, dos, tres, quatro, cinco,

231
00:07:55,098 --> 00:07:59,082
seis, siete, ocho, nueve y diez.

232
00:08:00,026 --> 00:08:01,018
Not too bad, to give you

233
00:08:03,081 --> 00:08:05,026
one more example, here's another

234
00:08:05,060 --> 00:08:07,037
recording of another similar situation,

235
00:08:08,006 --> 00:08:09,079
here's the first microphone :  One,

236
00:08:10,047 --> 00:08:12,043
two, three, four, five, six,

237
00:08:13,037 --> 00:08:15,070
seven, eight, nine, ten.

238
00:08:16,098 --> 00:08:17,092
OK so the poor guy's gone

239
00:08:18,018 --> 00:08:19,035
home from the cocktail party and

240
00:08:19,042 --> 00:08:21,087
he 's now sitting in a room by himself talking to his radio.

241
00:08:23,008 --> 00:08:24,012
Here's the second microphone recording.

242
00:08:28,081 --> 00:08:31,080
One, two, three, four, five, six, seven, eight, nine, ten.

243
00:08:33,030 --> 00:08:34,015
When you give these two microphone

244
00:08:34,061 --> 00:08:35,052
recordings to the same algorithm,

245
00:08:36,036 --> 00:08:37,078
what it does, is again say,

246
00:08:38,037 --> 00:08:39,047
you know, it sounds like there

247
00:08:39,069 --> 00:08:41,037
are two audio sources, and moreover,

248
00:08:42,040 --> 00:08:43,082
the album says, here is

249
00:08:44,007 --> 00:08:46,000
the first of the audio sources I found.

250
00:08:47,048 --> 00:08:49,029
One, two, three, four,

251
00:08:49,073 --> 00:08:53,042
five, six, seven, eight, nine, ten.

252
00:08:54,064 --> 00:08:56,011
So that wasn't perfect, it

253
00:08:56,034 --> 00:08:57,036
got the voice, but it

254
00:08:57,057 --> 00:08:59,007
also got a little bit of the music in there.

255
00:08:59,088 --> 00:09:01,036
Then here's the second output to the algorithm.

256
00:09:10,001 --> 00:09:11,030
Not too bad, in that second

257
00:09:11,053 --> 00:09:13,029
output it managed to get rid of the voice entirely.

258
00:09:13,075 --> 00:09:14,085
And just, you know,

259
00:09:15,001 --> 00:09:17,037
cleaned up the music, got rid of the counting from one to ten.

260
00:09:18,084 --> 00:09:20,009
So you might look at

261
00:09:20,017 --> 00:09:21,075
an Unsupervised Learning algorithm like

262
00:09:21,095 --> 00:09:23,004
this and ask how

263
00:09:23,025 --> 00:09:25,011
complicated this is to implement this, right?

264
00:09:25,033 --> 00:09:26,055
It seems like in order to,

265
00:09:26,097 --> 00:09:28,087
you know, build this application, it seems

266
00:09:28,092 --> 00:09:30,054
like to do this audio processing you

267
00:09:30,066 --> 00:09:31,042
need to write a ton of code

268
00:09:32,024 --> 00:09:33,058
or maybe link into like a

269
00:09:33,069 --> 00:09:35,037
bunch of synthesizer Java libraries that

270
00:09:35,047 --> 00:09:37,014
process audio, seems like

271
00:09:37,024 --> 00:09:38,087
a really complicated program, to do

272
00:09:39,005 --> 00:09:41,003
this audio, separating out audio and so on.

273
00:09:42,046 --> 00:09:43,086
It turns out the algorithm, to

274
00:09:44,007 --> 00:09:45,063
do what you just heard, that

275
00:09:45,089 --> 00:09:47,027
can be done with one line

276
00:09:47,052 --> 00:09:49,026
of code - shown right here.

277
00:09:50,063 --> 00:09:52,035
It take researchers a long

278
00:09:52,061 --> 00:09:54,005
time to come up with this line of code.

279
00:09:54,049 --> 00:09:56,009
I'm not saying this is an easy problem,

280
00:09:57,008 --> 00:09:57,098
But it turns out that when you

281
00:09:58,017 --> 00:10:00,033
use the right programming environment, many learning

282
00:10:00,066 --> 00:10:02,005
algorithms can be really short programs.

283
00:10:03,050 --> 00:10:04,070
So this is also why in

284
00:10:04,084 --> 00:10:05,088
this class we're going to

285
00:10:06,000 --> 00:10:07,042
use the Octave programming environment.

286
00:10:08,054 --> 00:10:09,090
Octave, is free open source

287
00:10:10,012 --> 00:10:11,062
software, and using a

288
00:10:11,066 --> 00:10:13,012
tool like Octave or Matlab,

289
00:10:14,000 --> 00:10:15,039
many learning algorithms become just

290
00:10:15,069 --> 00:10:17,090
a few lines of code to implement.

291
00:10:18,037 --> 00:10:19,039
Later in this class, I'll just teach

292
00:10:19,062 --> 00:10:20,057
you a little bit about how to

293
00:10:20,072 --> 00:10:21,091
use Octave and you'll be

294
00:10:22,004 --> 00:10:24,059
implementing some of these algorithms in Octave.

295
00:10:24,098 --> 00:10:26,004
Or if you have Matlab you can use that too.

296
00:10:27,012 --> 00:10:28,050
It turns out the Silicon Valley, for

297
00:10:28,062 --> 00:10:29,047
a lot of machine learning algorithms,

298
00:10:30,028 --> 00:10:31,030
what we do is first prototype

299
00:10:32,003 --> 00:10:33,089
our software in Octave because software

300
00:10:34,033 --> 00:10:35,025
in Octave makes it incredibly fast

301
00:10:35,053 --> 00:10:36,091
to implement these learning algorithms.

302
00:10:38,023 --> 00:10:39,011
Here each of these functions

303
00:10:39,072 --> 00:10:41,046
like for example the SVD

304
00:10:41,067 --> 00:10:42,091
function that stands for singular

305
00:10:43,024 --> 00:10:44,051
value decomposition; but that turns

306
00:10:44,063 --> 00:10:45,069
out to be a

307
00:10:45,082 --> 00:10:48,041
linear algebra routine, that is just built into Octave.

308
00:10:49,050 --> 00:10:50,038
If you were trying to do this

309
00:10:50,046 --> 00:10:51,049
in C++ or Java,

310
00:10:51,077 --> 00:10:53,003
this would be many many lines of

311
00:10:53,017 --> 00:10:55,067
code linking complex C++ or Java libraries.

312
00:10:56,044 --> 00:10:57,049
So, you can implement this stuff as

313
00:10:57,067 --> 00:10:58,069
C++ or Java

314
00:10:59,004 --> 00:11:00,009
or Python, it's just much

315
00:11:00,028 --> 00:11:02,009
more complicated to do so in those languages.

316
00:11:03,075 --> 00:11:05,005
What I've seen after having taught

317
00:11:05,029 --> 00:11:06,098
machine learning for almost a

318
00:11:07,021 --> 00:11:08,067
decade now, is that, you

319
00:11:08,088 --> 00:11:10,034
learn much faster if you

320
00:11:10,048 --> 00:11:11,070
use Octave as your

321
00:11:11,078 --> 00:11:14,007
programming environment, and if

322
00:11:14,025 --> 00:11:15,057
you use Octave as your

323
00:11:16,025 --> 00:11:17,011
learning tool and as your

324
00:11:17,024 --> 00:11:18,063
prototyping tool, it'll let

325
00:11:19,000 --> 00:11:21,027
you learn and prototype learning algorithms much more quickly.

326
00:11:22,063 --> 00:11:23,085
And in fact what many people will

327
00:11:23,099 --> 00:11:25,038
do to in the large Silicon

328
00:11:25,073 --> 00:11:27,036
Valley companies is in fact, use

329
00:11:27,055 --> 00:11:29,001
an algorithm like Octave to first

330
00:11:29,037 --> 00:11:31,011
prototype the learning algorithm, and

331
00:11:31,050 --> 00:11:32,077
only after you've gotten it

332
00:11:32,086 --> 00:11:33,082
to work, then you migrate

333
00:11:34,038 --> 00:11:35,090
it to C++ or Java or whatever.

334
00:11:36,088 --> 00:11:37,096
It turns out that by doing

335
00:11:38,022 --> 00:11:39,007
things this way, you can often

336
00:11:39,039 --> 00:11:40,044
get your algorithm to work much

337
00:11:41,029 --> 00:11:43,004
faster than if you were starting out in C++.

338
00:11:44,044 --> 00:11:46,000
So, I know that as an

339
00:11:46,010 --> 00:11:47,049
instructor, I get to

340
00:11:47,057 --> 00:11:48,058
say "trust me on

341
00:11:48,073 --> 00:11:49,078
this one" only a finite

342
00:11:50,002 --> 00:11:51,041
number of times, but for

343
00:11:51,055 --> 00:11:52,072
those of you who've never used these

344
00:11:53,033 --> 00:11:54,087
Octave type programming environments before,

345
00:11:55,024 --> 00:11:56,007
I am going to ask you

346
00:11:56,012 --> 00:11:56,097
to trust me on this one,

347
00:11:57,057 --> 00:11:58,095
and say that you, you will,

348
00:11:59,070 --> 00:12:01,017
I think your time, your development

349
00:12:01,070 --> 00:12:03,010
time is one of the most valuable resources.

350
00:12:04,021 --> 00:12:05,057
And having seen lots

351
00:12:05,079 --> 00:12:06,085
of people do this, I think

352
00:12:07,019 --> 00:12:08,046
you as a machine learning

353
00:12:08,085 --> 00:12:09,099
researcher, or machine learning developer

354
00:12:10,083 --> 00:12:12,008
will be much more productive if

355
00:12:12,022 --> 00:12:13,000
you learn to start in prototype,

356
00:12:13,058 --> 00:12:15,025
to start in Octave, in some other language.

357
00:12:17,057 --> 00:12:19,078
Finally, to wrap

358
00:12:20,009 --> 00:12:22,088
up this video, I have one quick review question for you.

359
00:12:24,039 --> 00:12:26,039
We talked about Unsupervised Learning, which

360
00:12:26,070 --> 00:12:27,066
is a learning setting where you

361
00:12:27,075 --> 00:12:28,073
give the algorithm a ton

362
00:12:28,084 --> 00:12:30,012
of data and just ask it

363
00:12:30,024 --> 00:12:32,089
to find structure in the data for us.

364
00:12:33,015 --> 00:12:35,016
Of the following four examples, which

365
00:12:35,049 --> 00:12:36,040
ones, which of these four

366
00:12:36,087 --> 00:12:37,062
do you think would will be

367
00:12:37,072 --> 00:12:39,051
an Unsupervised Learning algorithm as

368
00:12:40,022 --> 00:12:41,095
opposed to Supervised Learning problem.

369
00:12:42,073 --> 00:12:43,059
For each of the four

370
00:12:43,086 --> 00:12:44,085
check boxes on the left,

371
00:12:45,063 --> 00:12:46,089
check the ones for which

372
00:12:47,021 --> 00:12:49,039
you think Unsupervised Learning

373
00:12:49,070 --> 00:12:51,029
algorithm would be appropriate and

374
00:12:51,044 --> 00:12:53,092
then click the button on the lower right to check your answer.

375
00:12:54,069 --> 00:12:57,002
So when the video pauses, please

376
00:12:57,037 --> 00:12:58,075
answer the question on the slide.

377
00:13:01,086 --> 00:13:03,095
So, hopefully, you've remembered the spam folder problem.

378
00:13:04,071 --> 00:13:06,030
If you have labeled data, you

379
00:13:06,045 --> 00:13:07,067
know, with spam and

380
00:13:07,079 --> 00:13:10,047
non-spam e-mail, we'd treat this as a Supervised Learning problem.

381
00:13:11,062 --> 00:13:13,087
The news story example, that's

382
00:13:14,010 --> 00:13:15,037
exactly the Google News example

383
00:13:15,090 --> 00:13:16,060
that we saw in this video,

384
00:13:17,009 --> 00:13:17,095
we saw how you can use

385
00:13:18,008 --> 00:13:19,046
a clustering algorithm to cluster

386
00:13:19,087 --> 00:13:21,098
these articles together so that's Unsupervised Learning.

387
00:13:23,025 --> 00:13:25,044
The market segmentation example I

388
00:13:25,050 --> 00:13:27,012
talked a little bit earlier, you

389
00:13:27,022 --> 00:13:29,011
can do that as an Unsupervised Learning problem

390
00:13:29,097 --> 00:13:30,086
because I am just gonna

391
00:13:30,092 --> 00:13:32,034
get my algorithm data and ask

392
00:13:32,050 --> 00:13:34,034
it to discover market segments automatically.

393
00:13:35,061 --> 00:13:37,092
And the final example, diabetes, well,

394
00:13:38,007 --> 00:13:39,008
that's actually just like our

395
00:13:39,035 --> 00:13:41,048
breast cancer example from the last video.

396
00:13:42,019 --> 00:13:43,032
Only instead of, you know,

397
00:13:43,060 --> 00:13:45,027
good and bad cancer tumors or

398
00:13:45,054 --> 00:13:47,038
benign or malignant tumors we

399
00:13:47,054 --> 00:13:49,026
instead have diabetes or

400
00:13:49,033 --> 00:13:50,044
not and so we will

401
00:13:50,070 --> 00:13:51,083
use that as a supervised,

402
00:13:52,037 --> 00:13:53,074
we will solve that as

403
00:13:53,087 --> 00:13:54,066
a Supervised Learning problem just like

404
00:13:54,073 --> 00:13:56,045
we did for the breast tumor data.

405
00:13:58,026 --> 00:13:59,039
So, that's it for Unsupervised

406
00:14:00,010 --> 00:14:01,058
Learning and in the

407
00:14:01,064 --> 00:14:02,094
next video, we'll delve more

408
00:14:03,026 --> 00:14:04,060
into specific learning algorithms

409
00:14:05,054 --> 00:14:06,059
and start to talk about

410
00:14:07,022 --> 00:14:08,075
just how these algorithms work and

411
00:14:08,091 --> 00:14:11,026
how we can, how you can go about implementing them.
