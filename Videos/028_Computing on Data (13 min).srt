
1
00:00:00,022 --> 00:00:01,017
Now that you know how to load

2
00:00:01,038 --> 00:00:02,077
and save data in Octave, put

3
00:00:03,006 --> 00:00:04,021
your data into matrices and so

4
00:00:04,073 --> 00:00:06,007
on. In this video I'd like

5
00:00:06,029 --> 00:00:07,038
to show you how to do computational

6
00:00:08,024 --> 00:00:10,001
operations on data and

7
00:00:10,033 --> 00:00:12,005
later on we'll be using this

8
00:00:12,032 --> 00:00:15,030
sorts of computation operations to implement our learning algorithms.

9
00:00:17,010 --> 00:00:17,035
Let's get started.

10
00:00:19,060 --> 00:00:20,039
Here's my Octave window.

11
00:00:21,000 --> 00:00:22,046
Let me just quickly initialize some

12
00:00:22,071 --> 00:00:24,057
variables to use

13
00:00:24,094 --> 00:00:26,010
for examples and set A

14
00:00:26,080 --> 00:00:27,076
to be a 3 by 2 matrix.

15
00:00:29,082 --> 00:00:31,028
and set B to a

16
00:00:31,051 --> 00:00:33,014
3 by 2 matrix and let's

17
00:00:33,032 --> 00:00:34,085
set C to a

18
00:00:35,011 --> 00:00:37,064
2 by 2 matrix, like so.

19
00:00:39,014 --> 00:00:41,043
Now, let's say I want to multiply 2 of my matrices.

20
00:00:41,096 --> 00:00:43,028
So, let's say I wanna compute AxC.

21
00:00:44,007 --> 00:00:44,059
I just type AxC.

22
00:00:45,074 --> 00:00:48,010
So, it's a 3 by 2 matrix times a 2 by 2 matrix.

23
00:00:48,085 --> 00:00:50,095
This gives me this 3 by 2 matrix.

24
00:00:52,015 --> 00:00:53,049
You can also do elements wise

25
00:00:53,074 --> 00:00:54,081
operations and do A.xB

26
00:00:56,050 --> 00:00:57,039
and what this would do is

27
00:00:57,060 --> 00:00:58,082
they'll take each elements of A

28
00:00:59,010 --> 00:01:00,042
and multiply it by

29
00:01:00,059 --> 00:01:02,004
the corresponding elements of B.

30
00:01:02,056 --> 00:01:04,059
So, that's A, that's B, that's A.xB.

31
00:01:06,070 --> 00:01:08,031
So, for example, the first element

32
00:01:09,042 --> 00:01:10,073
gives 1 times 11 which gives 11.

33
00:01:10,095 --> 00:01:13,023
The second element gives

34
00:01:14,003 --> 00:01:16,065
2 x 12 which gives 24 and so on.

35
00:01:16,076 --> 00:01:17,075
So it is the element

36
00:01:18,018 --> 00:01:19,054
wise multiplication of two

37
00:01:19,067 --> 00:01:21,009
matrices, and in general

38
00:01:21,051 --> 00:01:22,079
the P rand tends to,

39
00:01:23,037 --> 00:01:24,046
it's usually used, to denote

40
00:01:25,012 --> 00:01:26,021
element wise operations in octave.

41
00:01:27,037 --> 00:01:28,042
So, here's a matrix

42
00:01:28,087 --> 00:01:31,034
A and I'll do A dot carry 2.

43
00:01:31,073 --> 00:01:32,076
This gives me the multi,

44
00:01:33,001 --> 00:01:35,043
the element wise squaring of

45
00:01:35,068 --> 00:01:36,098
A, so 1 squared

46
00:01:37,037 --> 00:01:39,048
is 1, 2 squared is 4 and so on.

47
00:01:40,087 --> 00:01:41,079
Let's set V to a vector,

48
00:01:42,026 --> 00:01:44,087
we'll set V as 123 as a column vector.

49
00:01:46,018 --> 00:01:47,034
You can also do 1.

50
00:01:47,085 --> 00:01:49,048
over V to do

51
00:01:49,065 --> 00:01:51,040
the element wise reciprocal of

52
00:01:51,051 --> 00:01:52,053
V so this gives me

53
00:01:53,020 --> 00:01:54,079
one over one, one over two and one over three.

54
00:01:55,054 --> 00:01:56,076
This works too for matrices so

55
00:01:56,089 --> 00:01:58,018
one dot over A, gives me

56
00:01:58,046 --> 00:02:00,031
that element wise inverse of

57
00:02:00,051 --> 00:02:03,004
A.  and once

58
00:02:03,034 --> 00:02:04,068
again the P radians gives use

59
00:02:04,082 --> 00:02:06,067
a clue that this is an elements wise operation.

60
00:02:08,015 --> 00:02:09,013
To also do things like log

61
00:02:09,065 --> 00:02:10,075
V This is an element wise

62
00:02:11,059 --> 00:02:13,037
logarithm of, the

63
00:02:14,021 --> 00:02:15,028
V, E to the

64
00:02:15,041 --> 00:02:17,003
V, is the base E

65
00:02:17,038 --> 00:02:19,094
exponentiation of these elements

66
00:02:20,033 --> 00:02:21,034
of this is E, this is E

67
00:02:21,040 --> 00:02:22,088
squared EQ, this is

68
00:02:23,006 --> 00:02:26,000
V. And I

69
00:02:26,012 --> 00:02:28,011
can also do apps V to

70
00:02:28,022 --> 00:02:29,071
take the element wise absolute

71
00:02:30,015 --> 00:02:31,021
value of V. So here,

72
00:02:32,003 --> 00:02:34,031
V was all positive, abs, say

73
00:02:34,043 --> 00:02:35,097
minus 1 to minus 3,

74
00:02:36,050 --> 00:02:38,021
the element wise Absolute

75
00:02:38,053 --> 00:02:39,091
value gives me back these

76
00:02:40,043 --> 00:02:43,036
non-negative values and negative

77
00:02:43,081 --> 00:02:45,005
V gives me the minus

78
00:02:45,046 --> 00:02:46,033
of V. This is the same

79
00:02:46,072 --> 00:02:48,066
as -1xV but usually

80
00:02:49,006 --> 00:02:50,053
you just write negative V and

81
00:02:50,063 --> 00:02:55,034
so that negative 1xV and what else can you do?

82
00:02:55,099 --> 00:02:56,077
Here's another neat trick.

83
00:02:57,013 --> 00:02:58,002
So Let's see.

84
00:02:58,028 --> 00:03:01,027
Let's say I want to take V and increment each of these elements by 1.

85
00:03:01,040 --> 00:03:02,031
Well, one way to do

86
00:03:02,050 --> 00:03:05,012
it is by constructing a

87
00:03:05,041 --> 00:03:09,000
3 by 1 vector

88
00:03:09,065 --> 00:03:11,081
this all ones and adding that to V. So, they do that.

89
00:03:12,063 --> 00:03:14,065
This increments V by for 123 to 234.

90
00:03:15,034 --> 00:03:16,065
The way I did

91
00:03:16,078 --> 00:03:20,046
that was length of V, is three.

92
00:03:21,088 --> 00:03:23,059
So ones, length of

93
00:03:23,071 --> 00:03:25,012
V by one, this is ones

94
00:03:25,081 --> 00:03:26,066
of three by one.

95
00:03:27,005 --> 00:03:28,034
So that's ones, three by one.

96
00:03:29,058 --> 00:03:31,015
On the right and what I

97
00:03:31,022 --> 00:03:32,065
did was B plus ones,

98
00:03:33,018 --> 00:03:34,037
V by one, which is adding

99
00:03:35,015 --> 00:03:36,018
this vector of all ones

100
00:03:36,061 --> 00:03:37,062
to B. And so this increments

101
00:03:38,011 --> 00:03:39,093
V by one.

102
00:03:40,031 --> 00:03:41,062
And you, another simpler

103
00:03:41,096 --> 00:03:44,018
way to do that is to type V+ one, right?

104
00:03:44,046 --> 00:03:45,059
So that's V and

105
00:03:45,065 --> 00:03:46,081
V+ one also means to

106
00:03:47,000 --> 00:03:48,058
add one element wise to

107
00:03:49,028 --> 00:03:50,075
each of my elements of V.

108
00:03:52,040 --> 00:03:54,072
Now, let's talk about more operations.

109
00:03:55,044 --> 00:03:58,013
So, here's my matrix A. If you want to write A transpose.

110
00:03:58,078 --> 00:04:00,040
The way to do that is to write A prime.

111
00:04:00,090 --> 00:04:02,012
That's the apostrophe symbol.

112
00:04:02,065 --> 00:04:03,037
It's the left quote.

113
00:04:03,069 --> 00:04:04,093
So, on your keyboard

114
00:04:05,034 --> 00:04:06,036
you probably have a left

115
00:04:06,094 --> 00:04:07,086
quote and a right quote.

116
00:04:08,006 --> 00:04:09,046
So this is a at the

117
00:04:09,094 --> 00:04:11,034
standard quotation mark is a,

118
00:04:12,028 --> 00:04:13,097
what to say, a transpose

119
00:04:14,075 --> 00:04:15,087
to excuse me the, you

120
00:04:16,013 --> 00:04:17,008
know, a transpose of my

121
00:04:17,022 --> 00:04:18,055
major and of course

122
00:04:18,086 --> 00:04:19,081
a transpose if I transpose

123
00:04:20,039 --> 00:04:21,044
that again then I should

124
00:04:21,063 --> 00:04:25,074
get back my matrix A. Some more useful functions.

125
00:04:26,054 --> 00:04:28,039
Let's say locate A is

126
00:04:28,061 --> 00:04:30,030
1 15 to 0.5.

127
00:04:30,051 --> 00:04:33,001
So, it's a, you know, 1 by 4 matrix.

128
00:04:34,025 --> 00:04:35,087
Let's say set val equals max

129
00:04:36,022 --> 00:04:37,070
of A.  This returns the

130
00:04:37,077 --> 00:04:39,001
maximum value of A, which

131
00:04:39,031 --> 00:04:40,085
in this case is 15 and

132
00:04:41,050 --> 00:04:44,007
I can do val ind max

133
00:04:44,049 --> 00:04:46,052
A.  And this returns

134
00:04:47,012 --> 00:04:49,048
val of int which are

135
00:04:49,062 --> 00:04:51,012
the maximum value of A

136
00:04:51,024 --> 00:04:52,062
which is 15 as was the index.

137
00:04:52,093 --> 00:04:55,072
So the elements number two of A that 15.

138
00:04:55,098 --> 00:04:57,072
So, in is my index into this.

139
00:04:58,075 --> 00:05:00,000
Just as a warning: if

140
00:05:00,013 --> 00:05:02,056
you do max A where A is a matrix.

141
00:05:03,018 --> 00:05:04,050
What this does is this actually

142
00:05:04,077 --> 00:05:06,054
does the column wise maximum,

143
00:05:07,086 --> 00:05:09,070
but say a little bit more about this in a second.

144
00:05:11,056 --> 00:05:13,012
So, using this example of the

145
00:05:13,025 --> 00:05:16,026
variable lowercase A. If I do A less than three.

146
00:05:17,004 --> 00:05:18,081
This does the element wise operation.

147
00:05:19,058 --> 00:05:20,013
Element wise comparison.

148
00:05:20,095 --> 00:05:22,006
So, the first element

149
00:05:22,057 --> 00:05:24,024
Of A is less than three equals to one.

150
00:05:24,085 --> 00:05:26,010
Second elements of A is

151
00:05:26,029 --> 00:05:27,022
not less than three, so

152
00:05:27,043 --> 00:05:29,020
this value is zero, because it is also.

153
00:05:29,094 --> 00:05:31,012
The third and fourth numbers of

154
00:05:31,030 --> 00:05:32,062
A are the lesson,

155
00:05:32,087 --> 00:05:35,038
I meant less than three, third and fourth elements are less than three.

156
00:05:35,061 --> 00:05:36,057
So this is one, one, so

157
00:05:36,081 --> 00:05:38,020
this is just the element wide

158
00:05:38,045 --> 00:05:40,000
comparison of all four

159
00:05:40,027 --> 00:05:41,075
element variable lower case

160
00:05:42,051 --> 00:05:43,069
three and it returns true

161
00:05:44,001 --> 00:05:46,029
or false depending on whether or not it's less than three.

162
00:05:47,039 --> 00:05:48,031
Now, if I do find

163
00:05:48,087 --> 00:05:50,056
A less than three, this would

164
00:05:50,070 --> 00:05:51,098
tell me which are the

165
00:05:52,018 --> 00:05:53,058
elements of A that the

166
00:05:53,086 --> 00:05:54,091
variable A of less than three

167
00:05:55,019 --> 00:05:56,041
and in this case the 1st, 3rd

168
00:05:56,095 --> 00:05:58,068
and 4th elements are lesson three.

169
00:06:00,022 --> 00:06:01,025
For my next example Oh, let

170
00:06:01,043 --> 00:06:02,072
me set eight be code to

171
00:06:03,033 --> 00:06:05,035
magic three. The magic

172
00:06:05,074 --> 00:06:07,024
function returns. Let's type help magic. The magic function returns. Functions called

173
00:06:07,044 --> 00:06:09,006


174
00:06:09,038 --> 00:06:11,094


175
00:06:12,056 --> 00:06:14,047
Returns this matrices called magic squares.

176
00:06:15,035 --> 00:06:17,006
They have this, you know,

177
00:06:17,074 --> 00:06:19,075
mathematical property that all

178
00:06:20,002 --> 00:06:21,038
of their rows and columns and

179
00:06:21,056 --> 00:06:23,032
diagonals sum up to the same thing.

180
00:06:23,070 --> 00:06:25,012
So, you know, it's

181
00:06:25,057 --> 00:06:27,004
not actually useful for machine

182
00:06:27,036 --> 00:06:28,017
learning as far as I

183
00:06:28,023 --> 00:06:29,035
know, but I'm just using

184
00:06:29,068 --> 00:06:31,012
this as a convenient way,

185
00:06:31,063 --> 00:06:32,075
you know, to generate a 3

186
00:06:32,097 --> 00:06:35,056
by 3 matrix and this magic square screen.

187
00:06:36,022 --> 00:06:37,012
We have the power of 3

188
00:06:37,019 --> 00:06:39,030
at each row, each column and

189
00:06:39,050 --> 00:06:40,087
the diagonals all add up

190
00:06:41,005 --> 00:06:43,020
to the same thing, so it's kind of a mathematical construct.

191
00:06:44,050 --> 00:06:45,062
I use magic, I use this

192
00:06:45,080 --> 00:06:46,091
magic function only when I'm

193
00:06:47,006 --> 00:06:47,098
doing demos, or when I'm

194
00:06:48,013 --> 00:06:49,033
teaching Octave like this and

195
00:06:49,057 --> 00:06:50,098
I don't actually use it for

196
00:06:51,006 --> 00:06:52,060
any, you know, useful machine learning application.

197
00:06:53,086 --> 00:06:55,070
But, let's see, if I type RC equals find A greater than or equals 7.

198
00:06:59,038 --> 00:07:01,098
This finds all the elements

199
00:07:02,062 --> 00:07:03,051
of a that are greater than

200
00:07:03,076 --> 00:07:05,000
and equals to 7 and

201
00:07:05,020 --> 00:07:06,088
so, RC sense a row and column.

202
00:07:07,010 --> 00:07:09,010
So, the 11 element is greater than 7.

203
00:07:09,039 --> 00:07:10,085
The three two elements is

204
00:07:10,098 --> 00:07:13,004
greater than 7 and the two 3 elements is greater than 7.

205
00:07:13,019 --> 00:07:14,044
So let's see, the two, three

206
00:07:14,080 --> 00:07:17,087
element for example, is A two, three.

207
00:07:18,085 --> 00:07:20,024
Is seven, is this element

208
00:07:21,012 --> 00:07:23,013
out here, and that is indeed greater than or equal seven.

209
00:07:24,024 --> 00:07:25,062
By the way, I actually don't even

210
00:07:26,002 --> 00:07:27,049
memorize myself what these

211
00:07:27,061 --> 00:07:28,079
find functions do in the

212
00:07:28,095 --> 00:07:30,019
all these things do myself and

213
00:07:30,031 --> 00:07:31,023
whenever I use a find

214
00:07:31,038 --> 00:07:32,075
function, sometimes I forget

215
00:07:33,006 --> 00:07:34,056
myself exactly what does, and

216
00:07:34,079 --> 00:07:36,066
you know, type help find to look up the document.

217
00:07:37,097 --> 00:07:39,077
Okay, just two more things, if it's okay, to show you.

218
00:07:40,000 --> 00:07:40,098
One is the sum function.

219
00:07:41,054 --> 00:07:43,018
So here's my A and

220
00:07:43,037 --> 00:07:44,054
I type sum A. This adds

221
00:07:44,080 --> 00:07:45,069
up all the elements of A.

222
00:07:46,050 --> 00:07:47,045
And if I want to multiply them

223
00:07:47,062 --> 00:07:48,085
together, I type prod A.

224
00:07:49,041 --> 00:07:50,041
Prod sense of product,

225
00:07:50,080 --> 00:07:52,052
and it returns the products of

226
00:07:53,000 --> 00:07:54,005
these four elements of A.

227
00:07:56,004 --> 00:07:57,062
Floor A rounds down,

228
00:07:58,020 --> 00:07:59,025
these elements of A, so zero

229
00:07:59,047 --> 00:08:01,012
O point five gets rounded down to zero.

230
00:08:01,075 --> 00:08:03,006
And ceil, or ceiling A,

231
00:08:03,037 --> 00:08:04,060
gets rounded up, so zero

232
00:08:04,081 --> 00:08:06,014
point five, rounded up to

233
00:08:06,022 --> 00:08:08,094
the nearest integer, so zero point five gets rounded up to one.

234
00:08:10,087 --> 00:08:11,022
You can also.

235
00:08:12,000 --> 00:08:13,006
Let's see.

236
00:08:13,030 --> 00:08:14,011
Let me type rand 3.

237
00:08:14,036 --> 00:08:15,092
This generally sets a 3 by 3 matrix.

238
00:08:16,068 --> 00:08:19,049
If I type max randd 3, rand 3.

239
00:08:20,045 --> 00:08:21,050
What this does is it takes

240
00:08:21,081 --> 00:08:24,063
the element wise maximum of

241
00:08:24,093 --> 00:08:26,042
2 random 3 by 3 matrices.

242
00:08:26,089 --> 00:08:28,011
So, you'll notice all these

243
00:08:28,033 --> 00:08:28,093
numbers tend to be a bit on the

244
00:08:29,000 --> 00:08:30,083
large side because each of

245
00:08:30,089 --> 00:08:32,035
these is actually the max of

246
00:08:32,055 --> 00:08:34,076
a randomly, of element Y's

247
00:08:35,011 --> 00:08:36,089
max of two randomly generated matrices.

248
00:08:38,025 --> 00:08:39,087
This is my magic number.

249
00:08:40,027 --> 00:08:41,072
This was my magic square 3x3a.

250
00:08:43,000 --> 00:08:47,014
Let's say I type max A and then this will be it.

251
00:08:47,073 --> 00:08:49,034
Open, close, square brackets comma 1.

252
00:08:49,095 --> 00:08:51,019
What this does is

253
00:08:51,036 --> 00:08:53,002
this takes the column wise maximum.

254
00:08:53,060 --> 00:08:54,079
So, the maximum of the

255
00:08:54,090 --> 00:08:56,003
first column is eight, max

256
00:08:56,048 --> 00:08:57,072
of the second column is nine,

257
00:08:58,033 --> 00:08:59,071
the max of the third column is seven.

258
00:09:00,067 --> 00:09:01,090
This 1 means to take the

259
00:09:02,010 --> 00:09:03,048
max along the first dimension of

260
00:09:03,070 --> 00:09:05,086
A. 
In contrast, if

261
00:09:05,094 --> 00:09:07,032
I were to type max a, this

262
00:09:07,090 --> 00:09:09,071
funny notation 2 then this

263
00:09:09,097 --> 00:09:11,090
takes the per row maximum.

264
00:09:12,046 --> 00:09:13,027
So, the maximum for the first

265
00:09:13,042 --> 00:09:14,034
row is 8, max of

266
00:09:14,055 --> 00:09:16,012
second row is 7, max

267
00:09:16,058 --> 00:09:17,091
of the third row is 9

268
00:09:18,000 --> 00:09:20,038
and so this allows you to take maxes.

269
00:09:21,060 --> 00:09:23,034
You know, per row or per column.

270
00:09:24,077 --> 00:09:26,064
And if you want to, and

271
00:09:26,097 --> 00:09:28,064
remember it defaults to column

272
00:09:29,001 --> 00:09:29,086
mark wise elements on this,

273
00:09:30,005 --> 00:09:31,012
so if you want to find

274
00:09:31,062 --> 00:09:33,021
the maximum element in

275
00:09:33,037 --> 00:09:34,084
the entire matrix A, you

276
00:09:35,002 --> 00:09:36,039
can type max of max

277
00:09:36,096 --> 00:09:39,022
of A, like so, which is nine.

278
00:09:39,050 --> 00:09:40,063
Or you can turn A into

279
00:09:40,066 --> 00:09:42,002
a vector and type max

280
00:09:42,049 --> 00:09:44,057
of A colon, like

281
00:09:44,075 --> 00:09:46,062
so, this treats this as a vector

282
00:09:46,087 --> 00:09:49,076
and takes the max element of vector.

283
00:09:52,008 --> 00:09:53,098
Finally, let's set A

284
00:09:54,025 --> 00:09:55,067
to be a nine by nine magic square.

285
00:09:56,023 --> 00:09:57,052
So remember, the magic square

286
00:09:57,079 --> 00:09:59,060
has this property that every

287
00:09:59,095 --> 00:10:02,095
column in every row sums the same thing and also the diagonals.

288
00:10:03,052 --> 00:10:05,024
So here is 9X9 magic square.

289
00:10:06,024 --> 00:10:07,033
So let me just sum A one

290
00:10:07,066 --> 00:10:09,079
so this does a per column sum.

291
00:10:10,019 --> 00:10:10,095
And so I'm going to take each

292
00:10:11,010 --> 00:10:12,003
column of A and add

293
00:10:12,016 --> 00:10:13,055
them up and this, you

294
00:10:13,070 --> 00:10:14,098
know, lets us verify that indeed

295
00:10:15,036 --> 00:10:16,054
for 9 by 9 magic square.

296
00:10:16,091 --> 00:10:19,016
Every column adds up to 369 as of the same thing.

297
00:10:20,012 --> 00:10:21,062
Now, let's do the row wise sum.

298
00:10:22,000 --> 00:10:23,072
So, the sum A  comma 2

299
00:10:24,062 --> 00:10:27,069
and this sums

300
00:10:28,002 --> 00:10:28,089
up each row of A

301
00:10:29,021 --> 00:10:30,025
and each row of A

302
00:10:30,051 --> 00:10:31,099
also sums up to 369.

303
00:10:32,011 --> 00:10:34,029
Now let's sum the

304
00:10:34,050 --> 00:10:35,077
diagonal elements of A

305
00:10:35,099 --> 00:10:36,089
and make sure that they, that

306
00:10:37,037 --> 00:10:38,085
that also sums up to the same thing.

307
00:10:39,073 --> 00:10:40,076
So what I'm going to

308
00:10:40,087 --> 00:10:42,028
do is, construct a nine

309
00:10:42,057 --> 00:10:44,011
by nine identity matrix, that's

310
00:10:44,036 --> 00:10:45,087
I9, and let me

311
00:10:46,000 --> 00:10:48,048
take A and construct, multiply

312
00:10:49,032 --> 00:10:50,021
A elements wise.

313
00:10:51,029 --> 00:10:52,014
So here's my matrix of A.

314
00:10:52,078 --> 00:10:56,035
I'm gonna do A.xI9 and what

315
00:10:56,049 --> 00:10:57,087
this will do is take the

316
00:10:58,001 --> 00:10:59,062
element wise product of these

317
00:10:59,098 --> 00:11:00,095
2 matrices, and so this

318
00:11:01,009 --> 00:11:02,078
should wipe out everything except

319
00:11:03,067 --> 00:11:05,099
for the diagonal entries and now

320
00:11:06,041 --> 00:11:08,052
I'm going to sum, sum of

321
00:11:08,077 --> 00:11:11,000
A of that and this

322
00:11:11,017 --> 00:11:13,082
gives me the sum of

323
00:11:14,048 --> 00:11:16,052
these diagonal elements, and indeed it is 369.

324
00:11:16,064 --> 00:11:20,008
You can sum up the other diagonal as well.

325
00:11:20,024 --> 00:11:22,016
So this top left to bottom right.

326
00:11:22,039 --> 00:11:23,064
You can sum up the opposite diagonal

327
00:11:24,017 --> 00:11:25,057
from bottom left to top right.

328
00:11:26,082 --> 00:11:29,062
The sum, the commands for this is somewhat more cryptic.

329
00:11:30,020 --> 00:11:31,032
You don't really need to know this.

330
00:11:31,053 --> 00:11:32,083
I'm just showing you just in

331
00:11:33,010 --> 00:11:33,080
case any of you are curious,

332
00:11:34,076 --> 00:11:36,022
but let's see.

333
00:11:37,060 --> 00:11:40,085
Flip UD stands for flip up/down.

334
00:11:41,021 --> 00:11:42,036
If you do that, that turns out

335
00:11:42,062 --> 00:11:44,012
to sum up the

336
00:11:44,034 --> 00:11:45,084
elements in the opposites of,

337
00:11:46,002 --> 00:11:49,011
the other diagonal that also sums up to 369.

338
00:11:49,038 --> 00:11:50,047
Here, let me show you,

339
00:11:51,012 --> 00:11:52,063
whereas i9 is this

340
00:11:53,007 --> 00:11:57,029
matrix, flip up/down of

341
00:11:57,037 --> 00:11:58,074
i9, you know, takes the identity

342
00:11:58,097 --> 00:12:00,013
matrix and flips it vertically

343
00:12:00,079 --> 00:12:01,073
so you end up with, excuse me,

344
00:12:01,082 --> 00:12:04,024
flip UD, end up

345
00:12:04,039 --> 00:12:06,025
with ones on this opposite diagonal as well.

346
00:12:08,076 --> 00:12:10,002
Just one last command and then

347
00:12:10,049 --> 00:12:12,046
that's it, and then that will be it for this video.

348
00:12:12,075 --> 00:12:13,052
Let's say A to be the

349
00:12:13,069 --> 00:12:15,082
3x3 magic square

350
00:12:16,011 --> 00:12:16,099
again. If you want

351
00:12:17,020 --> 00:12:18,037
to invert the matrix, you

352
00:12:18,047 --> 00:12:20,033
type P inv A, this

353
00:12:20,063 --> 00:12:22,075
is typically called a pseudo inference, but it doesn't matter.

354
00:12:23,061 --> 00:12:24,075
Think of it as basically the inverse

355
00:12:24,099 --> 00:12:26,064
of A and that's the

356
00:12:26,096 --> 00:12:27,099
inverse of A and second

357
00:12:28,026 --> 00:12:30,069
set, you know, 10 equals p

358
00:12:31,074 --> 00:12:33,014
of A and of temp times

359
00:12:33,058 --> 00:12:35,007
A. This is indeed the

360
00:12:35,033 --> 00:12:36,096
identity matrix with essentially ones

361
00:12:37,025 --> 00:12:38,062
on the diagonals and zeros on

362
00:12:38,074 --> 00:12:41,023
the off-diagonals, up to a numerical round-off.

363
00:12:44,012 --> 00:12:45,029
So, that's it for how

364
00:12:45,075 --> 00:12:47,062
to do different computational operations

365
00:12:48,042 --> 00:12:49,067
on the data in matrices.

366
00:12:50,088 --> 00:12:52,084
And after running a

367
00:12:53,002 --> 00:12:54,035
learning algorithm, often one of

368
00:12:54,037 --> 00:12:55,062
the most useful things is to

369
00:12:55,089 --> 00:12:56,089
be able to look at your

370
00:12:57,023 --> 00:12:59,028
results, or to plot, or visualize your result.

371
00:13:00,001 --> 00:13:01,049
And in the next video I'm

372
00:13:01,066 --> 00:13:02,090
going to very quickly show you

373
00:13:03,017 --> 00:13:04,023
how, again, with one or

374
00:13:04,029 --> 00:13:05,083
two lines of code using Octave

375
00:13:06,026 --> 00:13:07,065
you can quickly visualize your

376
00:13:07,085 --> 00:13:09,007
data, or plot your data

377
00:13:09,089 --> 00:13:10,087
and use that to better

378
00:13:11,010 --> 00:13:13,008
understand, you know, what your learning algorithms are doing.
