
1
00:00:00,018 --> 00:00:02,010
When developing learning algorithms, very

2
00:00:02,039 --> 00:00:03,081
often a few simple plots

3
00:00:04,020 --> 00:00:05,011
can give you a better

4
00:00:05,025 --> 00:00:06,046
sense of what the algorithm

5
00:00:06,057 --> 00:00:08,009
is doing and just sanity check

6
00:00:08,041 --> 00:00:09,038
that everything is going okay

7
00:00:09,050 --> 00:00:11,058
and the algorithms doing what is supposed to.

8
00:00:12,041 --> 00:00:13,057
For example, in an earlier

9
00:00:13,092 --> 00:00:14,089
video, I talked about how

10
00:00:15,022 --> 00:00:16,057
plotting the cost function J

11
00:00:16,080 --> 00:00:18,030
of theta can help you

12
00:00:18,042 --> 00:00:20,005
make sure that gradient descent is converging.

13
00:00:21,060 --> 00:00:22,053
Often, plus of the data

14
00:00:23,007 --> 00:00:24,037
or of all the learning algorithm outputs

15
00:00:24,080 --> 00:00:25,076
will also give you ideas

16
00:00:26,039 --> 00:00:27,076
for how to improve your learning algorithm.

17
00:00:29,035 --> 00:00:31,005
Fortunately, Octave has very

18
00:00:31,032 --> 00:00:32,082
simple tools to generate lots

19
00:00:33,007 --> 00:00:34,038
of different plots and when

20
00:00:34,052 --> 00:00:36,017
I use learning algorithms, I find

21
00:00:36,049 --> 00:00:37,061
that plotting the data, plotting

22
00:00:38,007 --> 00:00:39,035
the learning algorithm and so

23
00:00:40,017 --> 00:00:41,057
on are often an important

24
00:00:42,006 --> 00:00:42,097
part of how I get

25
00:00:43,014 --> 00:00:45,006
ideas for improving the

26
00:00:45,097 --> 00:00:47,003
algorithms and in this video,

27
00:00:47,015 --> 00:00:48,018
I'd like to show you some

28
00:00:48,046 --> 00:00:51,025
of these Octave tools for plotting and visualizing your data.

29
00:00:53,070 --> 00:00:54,046
Here's my Octave window.

30
00:00:55,022 --> 00:00:56,065
Let's quickly generate some data

31
00:00:57,084 --> 00:00:58,039
for us to plot.

32
00:00:58,057 --> 00:00:59,036
So I'm going to set T

33
00:00:59,074 --> 00:01:01,075
to be equal to, you know, this array of numbers.

34
00:01:02,021 --> 00:01:03,071
Here's T, set of

35
00:01:03,079 --> 00:01:06,026
numbers going from 0 up to .98.

36
00:01:06,070 --> 00:01:08,034
Let's set y1 equals sine

37
00:01:09,006 --> 00:01:11,034
of 2 pie 40 and

38
00:01:12,054 --> 00:01:15,084
if I want to plot the sine function, it's very easy.

39
00:01:16,006 --> 00:01:17,057
I just type plot T comma Y

40
00:01:17,087 --> 00:01:19,015
1 and hit enter.

41
00:01:20,031 --> 00:01:21,090
And up comes this plot

42
00:01:22,021 --> 00:01:24,006
where the horizontal axis is

43
00:01:24,021 --> 00:01:25,032
the T variable and the vertical

44
00:01:25,051 --> 00:01:26,070
axis is y1, which

45
00:01:26,095 --> 00:01:28,090
is the sine you saw in the function that we just computed.

46
00:01:30,098 --> 00:01:32,004
Let's set y2 to be

47
00:01:32,026 --> 00:01:33,076
equal to the cosine

48
00:01:34,040 --> 00:01:37,071
of two pi, four T, like so.

49
00:01:38,075 --> 00:01:40,031
And if I plot

50
00:01:41,068 --> 00:01:43,042
T comma y2, what octave

51
00:01:43,079 --> 00:01:44,085
will I do is I'll take my

52
00:01:45,006 --> 00:01:46,084
sine plot and it

53
00:01:46,093 --> 00:01:48,025
will replace with this cosine

54
00:01:48,068 --> 00:01:51,003
function and now, you know, cosine of xi of 1.

55
00:01:51,032 --> 00:01:52,095
Now, what if I

56
00:01:53,001 --> 00:01:54,015
want to have both

57
00:01:54,060 --> 00:01:56,075
the sine and the cosine plots on top of each other?

58
00:01:56,098 --> 00:01:58,060
What I'm going to do is I'm

59
00:01:59,059 --> 00:02:01,001
going to type plot t,y1.

60
00:02:01,014 --> 00:02:03,006
So here's my sine function, and then

61
00:02:03,032 --> 00:02:05,081
I'm going to use the function hold on.

62
00:02:06,092 --> 00:02:08,037
And what hold does it closes

63
00:02:08,091 --> 00:02:10,016
octaves to now

64
00:02:10,027 --> 00:02:11,028
figures on top of the

65
00:02:11,047 --> 00:02:13,011
old one and let

66
00:02:13,071 --> 00:02:15,008
me now plot t y2.

67
00:02:15,024 --> 00:02:18,015
I'm going to plot the cosine function in a different color.

68
00:02:19,084 --> 00:02:21,012
So, let me put there

69
00:02:22,018 --> 00:02:23,037
r in quotation marks there

70
00:02:24,009 --> 00:02:25,016
and instead of replacing

71
00:02:25,030 --> 00:02:26,040
the current figure, I'll plot the

72
00:02:26,062 --> 00:02:28,033
cosine function on top and

73
00:02:28,047 --> 00:02:31,046
the r indicates the what is an event color.

74
00:02:33,069 --> 00:02:34,091
And here additional commands - x

75
00:02:35,011 --> 00:02:38,008
label times, to label the X axis, or the horizontal axis.

76
00:02:39,015 --> 00:02:41,021
And Y label values A,

77
00:02:41,043 --> 00:02:43,052
to label the vertical axis value,

78
00:02:44,094 --> 00:02:45,096
and I can also

79
00:02:55,063 --> 00:02:57,016
label my two lines

80
00:02:57,062 --> 00:03:00,036
with this command: legend sine cosine

81
00:03:01,050 --> 00:03:02,065
and this puts this

82
00:03:02,088 --> 00:03:03,090
legend up on the upper

83
00:03:04,006 --> 00:03:04,086
right showing what the 2

84
00:03:05,011 --> 00:03:06,090
lines are, and finally title

85
00:03:08,028 --> 00:03:11,022
my plot is the title at the top of this figure.

86
00:03:12,075 --> 00:03:13,062
Lastly, if you want to save

87
00:03:13,078 --> 00:03:14,091
this figure, you type print -dpng

88
00:03:18,011 --> 00:03:18,011
myplot.png.

89
00:03:20,006 --> 00:03:20,006


90
00:03:21,037 --> 00:03:22,080
So PNG is a graphics

91
00:03:23,025 --> 00:03:24,096
file format, and if you

92
00:03:25,015 --> 00:03:27,031
do this it will let you save this as a file.

93
00:03:27,061 --> 00:03:28,063
If I do that,

94
00:03:28,091 --> 00:03:31,000
let me actually change directory to,

95
00:03:31,031 --> 00:03:34,096
let's see, like

96
00:03:35,012 --> 00:03:38,018
that, and then I will print that out.

97
00:03:39,022 --> 00:03:41,043
So this will take a

98
00:03:41,069 --> 00:03:43,069
while depending on how

99
00:03:43,088 --> 00:03:45,087
your Octave configuration is setup,

100
00:03:46,022 --> 00:03:48,065
may take a few seconds, but change

101
00:03:48,090 --> 00:03:50,033
directory to my desktop and Octave

102
00:03:50,071 --> 00:03:52,021
is now taking a few seconds to save this.

103
00:03:54,075 --> 00:03:57,021
If I now go to my desktop, Let's hide these windows.

104
00:03:57,066 --> 00:03:58,025
Here's myplot.png

105
00:03:59,037 --> 00:04:00,052
which Octave has saved, and you

106
00:04:00,074 --> 00:04:02,044
know, there's the figure saved as the PNG file.

107
00:04:03,046 --> 00:04:05,033
Octave can save thousand other formats as well.

108
00:04:05,052 --> 00:04:06,096
So, you can type help plot,

109
00:04:07,043 --> 00:04:09,041
if you want to see the

110
00:04:09,050 --> 00:04:11,025
other file formats, rather than

111
00:04:11,053 --> 00:04:13,009
PNG, that you can save

112
00:04:13,034 --> 00:04:14,078
figures in.

113
00:04:15,013 --> 00:04:16,024
And lastly, if you want

114
00:04:16,047 --> 00:04:18,002
to get rid of the plot, the

115
00:04:18,054 --> 00:04:23,038
close command causes the figure to go away.

116
00:04:23,081 --> 00:04:24,063
As I figure if I type

117
00:04:24,089 --> 00:04:26,031
close, that figure just

118
00:04:26,056 --> 00:04:28,002
disappeared from my desktop.

119
00:04:30,063 --> 00:04:33,011
Octave also lets you specify a figure and numbers.

120
00:04:33,035 --> 00:04:35,075
You type figure 1 plots t, y1.

121
00:04:36,083 --> 00:04:38,088
That starts up

122
00:04:39,067 --> 00:04:41,058
first figure, and that plots t, y1.

123
00:04:41,097 --> 00:04:44,068
And then if you want a second figure, you specify a different figure number.

124
00:04:45,002 --> 00:04:46,094
So figure two, plot t,

125
00:04:47,077 --> 00:04:49,076
y2 like so, and

126
00:04:49,092 --> 00:04:52,052
now on my desktop, I actually have 2 figures.

127
00:04:53,007 --> 00:04:54,000
So, figure 1 and figure

128
00:04:54,051 --> 00:04:55,051
2 thus 1 plotting the sine

129
00:04:55,082 --> 00:04:58,019
function, 1 plotting the cosine function.

130
00:04:59,017 --> 00:05:00,036
Here's one other neat command that

131
00:05:00,044 --> 00:05:02,043
I often use, which is the subplot command.

132
00:05:02,081 --> 00:05:05,017
So, we're going to use subplot 1 2 1.

133
00:05:05,037 --> 00:05:07,022
What it does it sub-divides

134
00:05:07,093 --> 00:05:11,019
the plot into a

135
00:05:11,077 --> 00:05:13,075
one-by-two grid with the

136
00:05:13,081 --> 00:05:15,081
first 2 parameters are, and

137
00:05:15,098 --> 00:05:17,052
it starts to access the

138
00:05:17,062 --> 00:05:19,014
first element. That's

139
00:05:19,033 --> 00:05:21,036
what the final parameter 1 is, right?

140
00:05:22,027 --> 00:05:23,043
So, divide my figure into a

141
00:05:23,055 --> 00:05:24,079
one by two grid, and I

142
00:05:24,091 --> 00:05:26,017
want to access the first

143
00:05:26,056 --> 00:05:27,083
element right now.

144
00:05:27,097 --> 00:05:30,025
And so, if I type that

145
00:05:30,042 --> 00:05:32,025
in, this product, this figure, is on the left.

146
00:05:32,075 --> 00:05:34,025
And if I plot t,

147
00:05:35,035 --> 00:05:37,042
y1, it now fills

148
00:05:37,068 --> 00:05:39,037
up this first element.

149
00:05:40,043 --> 00:05:42,014
And if I I'll do subplot 122.

150
00:05:42,052 --> 00:05:44,020
I'm going to start to

151
00:05:44,044 --> 00:05:47,097
access the second element and plot t, y2.

152
00:05:49,026 --> 00:05:50,080
Well, throw in y2 in

153
00:05:51,026 --> 00:05:53,029
the right hand side, or in the second element.

154
00:05:54,091 --> 00:05:55,095
And last command, you can

155
00:05:56,010 --> 00:05:57,055
also change the axis scales

156
00:05:58,016 --> 00:05:59,019
and change axis these to 1.51

157
00:06:00,032 --> 00:06:02,062
minus 1 1 and this

158
00:06:02,087 --> 00:06:04,043
sets the x range

159
00:06:05,004 --> 00:06:07,013
and y range for the

160
00:06:07,041 --> 00:06:09,051
figure on the right,

161
00:06:09,088 --> 00:06:11,014
and concretely, it assess the horizontal

162
00:06:12,037 --> 00:06:13,052
major values in the figure

163
00:06:13,067 --> 00:06:14,041
on the right to make sure 0.5

164
00:06:14,077 --> 00:06:15,098
to 1, and the vertical

165
00:06:16,033 --> 00:06:18,068
axis values use the range from minus one to one.

166
00:06:19,056 --> 00:06:21,008
And, you know, you don't need to memorize all these commands.

167
00:06:21,062 --> 00:06:23,004
If you ever need to

168
00:06:23,014 --> 00:06:24,044
change the access or you

169
00:06:24,077 --> 00:06:25,037
need to know is that, you know, there's an

170
00:06:25,068 --> 00:06:26,049
access command and you can

171
00:06:26,058 --> 00:06:28,000
already get the details

172
00:06:28,031 --> 00:06:30,018
from the usual octave help command.

173
00:06:31,060 --> 00:06:32,062
Finally, just a couple last

174
00:06:32,086 --> 00:06:35,027
commands CLF clear is

175
00:06:35,044 --> 00:06:38,006
a figure and here's one unique trait.

176
00:06:38,032 --> 00:06:39,027
Let's set a to be equal

177
00:06:39,075 --> 00:06:41,082
to a 5 by 5

178
00:06:42,005 --> 00:06:43,018
magic squares a. So, a

179
00:06:43,037 --> 00:06:45,029
is now this 5 by 5

180
00:06:45,031 --> 00:06:46,094
matrix does a neat

181
00:06:47,056 --> 00:06:48,091
trick that I sometimes use to

182
00:06:49,035 --> 00:06:50,068
visualize the matrix, which is

183
00:06:51,050 --> 00:06:54,069
I can use image sc

184
00:06:54,080 --> 00:06:56,026
of a what this will

185
00:06:56,037 --> 00:06:57,081
do is plot a five

186
00:06:58,000 --> 00:07:01,013
by five matrix, a five by five grid of color.

187
00:07:03,089 --> 00:07:05,056
where the different colors correspond to

188
00:07:05,069 --> 00:07:07,098
the different values in the A matrix.

189
00:07:09,006 --> 00:07:12,039
So concretely, I can also do color bar.

190
00:07:13,062 --> 00:07:14,077
Let me use a

191
00:07:14,085 --> 00:07:16,052
more sophisticated command, and image sc

192
00:07:16,064 --> 00:07:19,063
A color bar

193
00:07:20,030 --> 00:07:21,069
color map gray.

194
00:07:22,043 --> 00:07:24,068
This is actually running three commands at a time.

195
00:07:24,075 --> 00:07:26,004
I'm running image sc then running

196
00:07:26,025 --> 00:07:27,081
color bar, then running color map gray.

197
00:07:28,092 --> 00:07:29,087
And what this does, is it sets

198
00:07:30,016 --> 00:07:31,017
a color map, so a

199
00:07:31,031 --> 00:07:32,057
gray color map, and on the

200
00:07:32,073 --> 00:07:34,041
right it also puts in this color bar.

201
00:07:35,036 --> 00:07:36,091
And so this color bar

202
00:07:37,055 --> 00:07:39,087
shows what the different shades of color correspond to.

203
00:07:40,072 --> 00:07:42,035
Concretely, the upper left

204
00:07:42,069 --> 00:07:43,093
element of the A matrix

205
00:07:44,049 --> 00:07:45,064
is 17, and so that corresponds

206
00:07:46,031 --> 00:07:47,081
to kind of a mint shade of gray.

207
00:07:49,020 --> 00:07:51,035
Whereas in contrast the second

208
00:07:51,099 --> 00:07:53,020
element of A--sort of the

209
00:07:53,027 --> 00:07:55,043
1 2 element of A--is 24.

210
00:07:55,062 --> 00:07:57,047
Right, so it's A 1 2 is 24.

211
00:07:57,070 --> 00:07:59,056
So that corresponds to

212
00:07:59,068 --> 00:08:00,081
this square out here, which is

213
00:08:01,036 --> 00:08:02,039
nearly a shade of white.

214
00:08:03,067 --> 00:08:05,043
And the small value, say

215
00:08:05,068 --> 00:08:07,018
A--what is that? A

216
00:08:08,099 --> 00:08:11,045
4 5, you know, is a value

217
00:08:12,030 --> 00:08:13,069
3 over here that corresponds--

218
00:08:14,036 --> 00:08:15,020
you can see on my color bar

219
00:08:15,052 --> 00:08:16,048
that it corresponds to a

220
00:08:16,060 --> 00:08:18,032
much darker shade in this image.

221
00:08:19,048 --> 00:08:20,070
So here's another example,

222
00:08:21,013 --> 00:08:23,008
I can plot a larger, you

223
00:08:23,023 --> 00:08:24,045
know, here's a magic 15 that

224
00:08:24,076 --> 00:08:25,066
gives you a 15 by 15

225
00:08:26,001 --> 00:08:27,045
magic square and this

226
00:08:27,068 --> 00:08:29,035
gives me a plot of what

227
00:08:29,047 --> 00:08:32,028
my 15 by 15 magic squares values looks like.

228
00:08:33,070 --> 00:08:35,000
And finally to wrap

229
00:08:35,015 --> 00:08:36,088
up this video, what you've

230
00:08:37,000 --> 00:08:38,000
seen me do here is

231
00:08:38,025 --> 00:08:40,063
use comma chaining of function calls.

232
00:08:41,094 --> 00:08:42,098
Here's how you actually do this.

233
00:08:43,021 --> 00:08:44,033
If I type A equals

234
00:08:44,069 --> 00:08:46,009
1, B equals 2, C equals

235
00:08:46,058 --> 00:08:48,041
3, and hit Enter, then

236
00:08:48,062 --> 00:08:50,032
this is actually carrying out

237
00:08:50,062 --> 00:08:51,087
three commands at the same time.

238
00:08:52,003 --> 00:08:53,028
Or really carrying out three

239
00:08:53,040 --> 00:08:54,067
commands, one after another,

240
00:08:55,084 --> 00:08:57,009
and it prints out all three results.

241
00:08:57,050 --> 00:08:58,013
And this is a lot like

242
00:08:58,032 --> 00:09:00,012
A equals 1, B equals

243
00:09:00,045 --> 00:09:01,053
2, C equals 3, except

244
00:09:01,073 --> 00:09:03,024
that if I use semicolons instead

245
00:09:03,053 --> 00:09:05,029
of a comma, it doesn't print out anything.

246
00:09:05,080 --> 00:09:07,000
So, this, you know,

247
00:09:07,021 --> 00:09:08,027
this thing here we call comma

248
00:09:08,087 --> 00:09:11,079
chaining of commands, or comma chaining of function calls.

249
00:09:12,024 --> 00:09:13,037
And, it's just another

250
00:09:13,071 --> 00:09:15,032
convenient way in Octave to

251
00:09:15,044 --> 00:09:17,007
put multiple commands like image sc

252
00:09:17,070 --> 00:09:19,022
color bar, colon map

253
00:09:19,036 --> 00:09:21,014
to put multi-commands on the same line.

254
00:09:22,092 --> 00:09:23,054
So, that's it.

255
00:09:23,099 --> 00:09:24,085
You now know how to plot

256
00:09:25,019 --> 00:09:26,095
different figures and octave, and

257
00:09:27,046 --> 00:09:28,087
in next video the

258
00:09:29,027 --> 00:09:30,042
next main piece that I want

259
00:09:30,046 --> 00:09:31,076
to tell you about is how to

260
00:09:31,094 --> 00:09:33,033
write control statements like if,

261
00:09:33,062 --> 00:09:35,013
while, for statements and

262
00:09:35,023 --> 00:09:37,017
octave as well as hard to define and use functions
