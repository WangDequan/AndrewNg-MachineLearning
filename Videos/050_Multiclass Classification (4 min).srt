
1
00:00:00,032 --> 00:00:01,040
In this video, I want to

2
00:00:01,049 --> 00:00:02,071
tell you about how to use neural

3
00:00:02,089 --> 00:00:04,038
networks to do multiclass

4
00:00:04,083 --> 00:00:06,069
classification where we may

5
00:00:06,082 --> 00:00:07,083
have more than one category

6
00:00:07,092 --> 00:00:09,059
that we're trying to distinguish amongst.

7
00:00:10,047 --> 00:00:12,027
In the last part of

8
00:00:12,059 --> 00:00:13,092
the last video, where we

9
00:00:14,040 --> 00:00:15,032
had the handwritten digit recognition

10
00:00:15,083 --> 00:00:17,003
problem, that was actually

11
00:00:17,069 --> 00:00:19,000
a multiclass classification problem because

12
00:00:19,044 --> 00:00:20,073
there were ten possible categories

13
00:00:21,055 --> 00:00:22,082
for recognizing the digits from

14
00:00:23,003 --> 00:00:23,098
0 through 9 and so, if

15
00:00:24,005 --> 00:00:25,042
you want us to fill you

16
00:00:25,082 --> 00:00:27,083
in on the details of how to do that.

17
00:00:30,041 --> 00:00:31,087
The way we do multiclass classification

18
00:00:32,099 --> 00:00:34,038
in a neural network is essentially

19
00:00:35,006 --> 00:00:37,060
an extension of the one versus all method.

20
00:00:38,060 --> 00:00:39,064
So, let's say that we

21
00:00:39,078 --> 00:00:41,065
have a computer vision example,

22
00:00:42,063 --> 00:00:43,081
where instead of just trying

23
00:00:44,000 --> 00:00:46,017
to recognize cars as in

24
00:00:46,031 --> 00:00:47,028
the original example that I started off

25
00:00:47,046 --> 00:00:48,067
with, but let's say that

26
00:00:49,006 --> 00:00:51,038
we're trying to recognize, you know, four

27
00:00:51,050 --> 00:00:52,082
categories of objects and given

28
00:00:53,003 --> 00:00:53,089
an image we want to

29
00:00:54,010 --> 00:00:56,035
decide if it is a pedestrian, a car, a motorcycle or a truck.

30
00:00:57,020 --> 00:00:58,075
If that's the case, what

31
00:00:58,092 --> 00:01:00,047
we would do is we would

32
00:01:00,096 --> 00:01:02,082
build a neural network with four

33
00:01:03,015 --> 00:01:04,050
output units so that

34
00:01:04,070 --> 00:01:08,010
our neural network now outputs a vector of four numbers.

35
00:01:09,010 --> 00:01:10,045
So, the output now is actually

36
00:01:11,017 --> 00:01:11,084
needing to be a vector of four

37
00:01:12,006 --> 00:01:13,029
numbers and what we're

38
00:01:13,054 --> 00:01:14,040
going to try to do is

39
00:01:14,078 --> 00:01:16,068
get the first output unit

40
00:01:17,018 --> 00:01:18,084
to classify: is the

41
00:01:19,015 --> 00:01:20,065
image a pedestrian, yes or no.

42
00:01:21,020 --> 00:01:24,053
The second unit to classify: is the image a car, yes or no.

43
00:01:25,010 --> 00:01:26,087
This unit to classify: is the

44
00:01:27,012 --> 00:01:29,015
image a motorcycle, yes or

45
00:01:29,023 --> 00:01:30,045
no, and this would classify:

46
00:01:30,093 --> 00:01:32,093
is the image a truck, yes or no.

47
00:01:33,071 --> 00:01:35,073
And thus, when the image

48
00:01:36,039 --> 00:01:37,062
is of a pedestrian, we

49
00:01:37,081 --> 00:01:38,093
would ideally want the network

50
00:01:39,040 --> 00:01:40,014
to output 1, 0, 0, 0,

51
00:01:40,025 --> 00:01:41,026
when it is a

52
00:01:41,051 --> 00:01:42,031
car we want it to output

53
00:01:42,075 --> 00:01:43,053
0, 1, 0, 0, when this

54
00:01:43,084 --> 00:01:45,095
is a motorcycle, we get it to or rather, we want

55
00:01:46,039 --> 00:01:47,045
it to output 0, 0,

56
00:01:47,057 --> 00:01:48,096
1, 0 and so on.

57
00:01:50,075 --> 00:01:51,087
So this is just like

58
00:01:52,026 --> 00:01:53,068
the "one versus all" method

59
00:01:54,018 --> 00:01:55,051
that we talked about when we

60
00:01:55,068 --> 00:01:58,012
were describing logistic regression, and

61
00:01:58,031 --> 00:02:00,048
here we have essentially four logistic

62
00:02:01,029 --> 00:02:03,009
regression classifiers, each of

63
00:02:03,026 --> 00:02:04,079
which is trying to recognize one

64
00:02:05,000 --> 00:02:06,078
of the four classes that

65
00:02:06,093 --> 00:02:08,083
we want to distinguish amongst.

66
00:02:09,053 --> 00:02:10,078
So, rearranging the slide of

67
00:02:10,086 --> 00:02:12,012
it, here's our neural network

68
00:02:12,053 --> 00:02:14,006
with four output units and those

69
00:02:14,033 --> 00:02:15,050
are what we want h

70
00:02:15,066 --> 00:02:16,078
of x to be when we

71
00:02:16,099 --> 00:02:18,093
have the different images, and

72
00:02:19,058 --> 00:02:20,086
the way we're going to represent the

73
00:02:21,011 --> 00:02:22,068
training set in these settings

74
00:02:23,025 --> 00:02:24,066
is as follows. So, when we have

75
00:02:24,088 --> 00:02:26,016
a training set with different images

76
00:02:27,034 --> 00:02:28,099
of pedestrians, cars, motorcycles and

77
00:02:29,025 --> 00:02:30,044
trucks, what we're going

78
00:02:30,050 --> 00:02:31,093
to do in this example is

79
00:02:32,018 --> 00:02:34,058
that whereas previously we had

80
00:02:34,099 --> 00:02:36,078
written out the labels as

81
00:02:37,003 --> 00:02:38,031
y being an integer from

82
00:02:38,071 --> 00:02:42,018
1, 2, 3 or 4. Instead of

83
00:02:42,028 --> 00:02:44,021
representing y this way,

84
00:02:44,088 --> 00:02:46,034
we're going to instead represent y

85
00:02:47,005 --> 00:02:49,040
as follows: namely Yi

86
00:02:54,084 --> 00:02:55,022
will be either 1, 0, 0, 0

87
00:02:55,022 --> 00:02:57,003
or 0, 1, 0, 0 or 0, 0, 1, 0 or 0, 0, 0, 1 depending on what the

88
00:02:57,049 --> 00:02:59,009
corresponding image Xi is.

89
00:02:59,040 --> 00:03:00,069
And so one training example

90
00:03:01,022 --> 00:03:03,009
will be one pair Xi colon Yi

91
00:03:04,053 --> 00:03:06,034
where Xi is an image with, you

92
00:03:06,043 --> 00:03:08,000
know one of the four objects and

93
00:03:08,016 --> 00:03:09,063
Yi will be one of these vectors.

94
00:03:10,096 --> 00:03:12,002
And hopefully, we can find

95
00:03:12,041 --> 00:03:13,066
a way to get our

96
00:03:14,002 --> 00:03:15,009
Neural Networks to output some

97
00:03:15,028 --> 00:03:16,047
value. So, the h of x

98
00:03:17,031 --> 00:03:20,036
is approximately y and

99
00:03:20,055 --> 00:03:22,000
both h of x and Yi,

100
00:03:22,059 --> 00:03:23,077
both of these are going

101
00:03:24,002 --> 00:03:25,016
to be in our example,

102
00:03:26,006 --> 00:03:28,069
four dimensional vectors when we have four classes.

103
00:03:31,081 --> 00:03:33,002
So, that's how you

104
00:03:33,016 --> 00:03:34,083
get neural network to do multiclass classification.

105
00:03:36,028 --> 00:03:37,078
This wraps up our discussion on

106
00:03:38,005 --> 00:03:39,062
how to represent Neural Networks

107
00:03:40,012 --> 00:03:41,062
that is on our hypotheses representation.

108
00:03:42,078 --> 00:03:44,018
In the next set of videos, let's

109
00:03:44,068 --> 00:03:45,083
start to talk about how take

110
00:03:45,099 --> 00:03:47,036
a training set and how to

111
00:03:47,056 --> 00:03:49,096
automatically learn the parameters of the neural network.
