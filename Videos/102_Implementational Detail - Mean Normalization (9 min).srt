
1
00:00:00,040 --> 00:00:01,051
By now you've seen all

2
00:00:01,080 --> 00:00:03,060
of the main pieces of the

3
00:00:04,003 --> 00:00:06,075
recommender system algorithm or the collaborative filtering algorithm.

4
00:00:07,076 --> 00:00:08,076
In this video I want

5
00:00:08,093 --> 00:00:10,061
to just share one last implementational detail,

6
00:00:12,000 --> 00:00:14,014
namely mean normalization, which

7
00:00:14,034 --> 00:00:15,051
can sometimes just make the

8
00:00:15,057 --> 00:00:17,008
algorithm work a little bit better.

9
00:00:18,028 --> 00:00:20,082
To motivate the idea of mean normalization, let's

10
00:00:22,012 --> 00:00:24,039
consider an example of where

11
00:00:24,071 --> 00:00:26,053
there's a user that has not rated any movies.

12
00:00:28,005 --> 00:00:29,028
So, in addition to our

13
00:00:29,053 --> 00:00:30,078
four users, Alice, Bob, Carol,

14
00:00:31,005 --> 00:00:32,071
and Dave, I've added a

15
00:00:32,086 --> 00:00:35,010
fifth user, Eve, who hasn't rated any movies.

16
00:00:36,046 --> 00:00:37,092
Let's see what our collaborative filtering

17
00:00:38,035 --> 00:00:39,057
algorithm will do on this user.

18
00:00:41,002 --> 00:00:43,014
Let's say that n is equal to 2 and so

19
00:00:43,039 --> 00:00:44,042
we're going to learn two features

20
00:00:45,040 --> 00:00:46,046
and we are going to have

21
00:00:46,063 --> 00:00:47,089
to learn a parameter vector theta

22
00:00:48,014 --> 00:00:50,042
5, which is going to be

23
00:00:51,013 --> 00:00:52,056
in R2, remember this

24
00:00:52,075 --> 00:00:55,092
is now vectors in Rn not Rn+1,

25
00:00:57,007 --> 00:00:58,021
we'll learn the parameter vector theta 5 for our user number 5, Eve.

26
00:00:59,078 --> 00:01:00,079
So if we look in

27
00:01:00,096 --> 00:01:02,002
the first term in this

28
00:01:02,020 --> 00:01:04,001
optimization objective, well the

29
00:01:04,021 --> 00:01:05,048
user Eve hasn't rated any

30
00:01:05,073 --> 00:01:07,085
movies, so there are

31
00:01:08,012 --> 00:01:10,075
no movies for

32
00:01:11,004 --> 00:01:12,081
which Rij is equal to

33
00:01:13,012 --> 00:01:14,059
one for the user Eve and

34
00:01:14,070 --> 00:01:15,084
so this first term plays no

35
00:01:16,006 --> 00:01:17,040
role at all in determining theta 5

36
00:01:18,060 --> 00:01:19,079
because there are no movies that Eve has rated.

37
00:01:20,095 --> 00:01:22,012
And so the only term that

38
00:01:22,026 --> 00:01:24,029
effects theta 5 is this term.

39
00:01:24,087 --> 00:01:25,082
And so we're saying that we

40
00:01:25,090 --> 00:01:28,084
want to choose vector theta 5 so

41
00:01:28,095 --> 00:01:33,081
that the last regularization term is

42
00:01:34,054 --> 00:01:35,050
as small as possible.

43
00:01:35,092 --> 00:01:38,046
In other words we want to minimize this

44
00:01:39,004 --> 00:01:39,060
lambda over 2 theta 5 subscript 1 squared

45
00:01:40,087 --> 00:01:43,015
plus theta 5

46
00:01:43,081 --> 00:01:45,084
subscript 2 squared so

47
00:01:46,004 --> 00:01:47,017
that's the component of the

48
00:01:47,026 --> 00:01:49,045
regularization term that corresponds to

49
00:01:49,073 --> 00:01:51,060
user 5, and of course

50
00:01:51,084 --> 00:01:53,028
if your goal is to

51
00:01:53,054 --> 00:01:55,054
minimize this term, then

52
00:01:55,090 --> 00:01:56,079
what you're going to end up

53
00:01:56,098 --> 00:01:58,051
with is just theta 5 equals 0 0.

54
00:01:59,067 --> 00:02:01,054
Because a regularization term

55
00:02:01,084 --> 00:02:03,026
is encouraging us to set

56
00:02:03,051 --> 00:02:05,012
parameters close to 0

57
00:02:05,062 --> 00:02:07,057
and if there is

58
00:02:07,073 --> 00:02:08,081
no data to try to

59
00:02:08,099 --> 00:02:10,021
pull the parameters away from

60
00:02:10,040 --> 00:02:11,046
0, because this first term

61
00:02:12,071 --> 00:02:13,080
doesn't effect theta 5,

62
00:02:13,087 --> 00:02:15,040
we just end up with theta 5

63
00:02:15,068 --> 00:02:18,044
equals the vector of all zeros. And

64
00:02:18,059 --> 00:02:19,061
so when we go to

65
00:02:19,072 --> 00:02:20,091
predict how user 5 would

66
00:02:21,028 --> 00:02:22,056
rate any movie, we have

67
00:02:22,088 --> 00:02:25,084
that theta 5 transpose xi,

68
00:02:26,090 --> 00:02:28,037
for any i, that's just going

69
00:02:29,094 --> 00:02:31,006
to be equal to zero.

70
00:02:31,056 --> 00:02:33,031
Because theta 5 is 0 for any value of

71
00:02:33,075 --> 00:02:35,078
x, this inner product is going to be equal to 0. And what we're

72
00:02:35,090 --> 00:02:37,015
going to have therefore, is that

73
00:02:37,031 --> 00:02:38,078
we're going to predict that Eve

74
00:02:39,047 --> 00:02:40,087
is going to rate every single

75
00:02:41,016 --> 00:02:42,068
movie with zero stars.

76
00:02:44,005 --> 00:02:45,096
But this doesn't seem very useful does it?

77
00:02:46,011 --> 00:02:47,031
I mean if you look at the different movies,

78
00:02:47,077 --> 00:02:49,071
Love at Last, this first movie,

79
00:02:50,012 --> 00:02:52,030
a couple people rated it 5 stars.

80
00:02:54,093 --> 00:02:56,087
And for even the Swords vs. Karate, someone rated it 5 stars.

81
00:02:57,040 --> 00:02:58,078
So some people do like some movies.

82
00:02:59,027 --> 00:03:01,003
It seems not useful to

83
00:03:01,015 --> 00:03:03,075
just predict that Eve is going to rate everything 0 stars.

84
00:03:04,056 --> 00:03:05,084
And in fact if we're predicting

85
00:03:06,040 --> 00:03:08,034
that eve is going to rate everything 0 stars,

86
00:03:09,005 --> 00:03:10,009
we also don't have any

87
00:03:10,028 --> 00:03:11,065
good way of recommending any movies

88
00:03:11,081 --> 00:03:12,093
to her, because you know

89
00:03:13,012 --> 00:03:15,031
all of these movies are getting exactly the

90
00:03:15,040 --> 00:03:16,081
same predicted rating for Eve

91
00:03:17,000 --> 00:03:18,050
so there's no one movie with

92
00:03:18,065 --> 00:03:20,000
a higher predicted rating that

93
00:03:20,021 --> 00:03:22,087
we could recommend to her, so, that's not very good.

94
00:03:24,052 --> 00:03:27,034
The idea of mean normalization will let us fix this problem.

95
00:03:28,015 --> 00:03:29,040
So here's how it works.

96
00:03:30,075 --> 00:03:31,071
As before let me group all of my

97
00:03:32,037 --> 00:03:33,075
movie ratings into this matrix

98
00:03:34,028 --> 00:03:35,040
Y, so just take all of

99
00:03:35,046 --> 00:03:36,069
these ratings and group them

100
00:03:37,024 --> 00:03:38,040
into matrix Y.  And this

101
00:03:38,056 --> 00:03:39,074
column over here of all

102
00:03:39,090 --> 00:03:41,021
question marks corresponds to

103
00:03:41,066 --> 00:03:43,030
Eve's not having rated any movies.

104
00:03:44,083 --> 00:03:46,088
Now to perform mean normalization what I'm going to

105
00:03:47,013 --> 00:03:48,034
do is compute the average

106
00:03:48,071 --> 00:03:50,061
rating that each movie obtained.

107
00:03:51,012 --> 00:03:51,075
And I'm going to store that

108
00:03:52,003 --> 00:03:54,078
in a vector that we'll call mu.

109
00:03:55,021 --> 00:03:57,025
So the first movie got two 5-star and two 0-star ratings,

110
00:03:57,075 --> 00:03:58,096
so the average of that is a 2.5-star rating.

111
00:03:59,003 --> 00:04:01,046
The second movie had

112
00:04:01,062 --> 00:04:04,030
an average of 2.5-stars and so on.

113
00:04:04,046 --> 00:04:06,030
And the final movie that has 0, 0, 5, 0.

114
00:04:06,033 --> 00:04:07,043
And the average of 0, 0,

115
00:04:07,052 --> 00:04:09,018
5, 0, that averages out to

116
00:04:09,062 --> 00:04:11,050
an average of 1.25

117
00:04:12,024 --> 00:04:14,090
rating. And what I'm going to

118
00:04:15,000 --> 00:04:15,090
do is look at all

119
00:04:16,001 --> 00:04:17,061
the movie ratings and I'm going

120
00:04:18,000 --> 00:04:19,055
to subtract off the mean rating.

121
00:04:20,011 --> 00:04:22,099
So this first element 5 I'm going to subtract off 2.5 and that gives me 2.5.

122
00:04:26,089 --> 00:04:29,037
And the second element 5 subtract off of 2.5,

123
00:04:29,058 --> 00:04:30,000
get a 2.5.

124
00:04:30,041 --> 00:04:31,075
And then the 0,

125
00:04:32,004 --> 00:04:34,056
0, subtract off 2.5 and you get -2.5, -2.5.

126
00:04:35,044 --> 00:04:36,052
In other words, what

127
00:04:36,062 --> 00:04:38,000
I'm going to do is take

128
00:04:38,031 --> 00:04:39,043
my matrix of movie ratings,

129
00:04:39,095 --> 00:04:42,006
take this wide matrix, and

130
00:04:42,073 --> 00:04:45,057
subtract form each row the average rating for that movie.

131
00:04:46,057 --> 00:04:47,057
So, what I'm doing is

132
00:04:48,000 --> 00:04:49,060
just normalizing each movie to

133
00:04:49,074 --> 00:04:51,061
have an average rating of zero.

134
00:04:52,080 --> 00:04:53,057
And so just one last example.

135
00:04:54,000 --> 00:04:56,000
If you look at this last row, 0 0 5 0.

136
00:04:56,026 --> 00:04:56,093
We're going to subtract 1.25, and

137
00:04:57,000 --> 00:04:58,058
so I end up with

138
00:05:00,094 --> 00:05:02,030
these values over here.

139
00:05:02,050 --> 00:05:03,073
So now and of course

140
00:05:03,093 --> 00:05:05,037
the question marks stay a question

141
00:05:06,095 --> 00:05:06,095
mark.

142
00:05:07,087 --> 00:05:09,062
So each movie in

143
00:05:09,081 --> 00:05:11,004
this new matrix Y has

144
00:05:11,020 --> 00:05:12,077
an average rating of 0.

145
00:05:13,093 --> 00:05:15,018
What I'm going to do then, is

146
00:05:15,043 --> 00:05:16,085
take this set of ratings

147
00:05:17,058 --> 00:05:20,017
and use it with my collaborative filtering algorithm.

148
00:05:20,048 --> 00:05:22,012
So I'm going to pretend that this

149
00:05:22,043 --> 00:05:24,019
was the data that I had

150
00:05:24,042 --> 00:05:25,056
gotten from my users, or pretend that

151
00:05:25,081 --> 00:05:27,039
these are the actual ratings I

152
00:05:27,052 --> 00:05:28,093
had gotten from the users, and I'm

153
00:05:29,025 --> 00:05:30,012
going to use this as my

154
00:05:30,026 --> 00:05:31,073
data set with which to

155
00:05:32,000 --> 00:05:33,092
learn my parameters theta

156
00:05:34,056 --> 00:05:36,054
J and my features XI

157
00:05:36,086 --> 00:05:39,031
- from these mean normalized movie ratings.

158
00:05:41,027 --> 00:05:42,004
When I want to make predictions

159
00:05:42,066 --> 00:05:43,091
of movie ratings, what I'm

160
00:05:44,006 --> 00:05:44,098
going to do is the

161
00:05:45,025 --> 00:05:46,082
following:  for user J on movie

162
00:05:47,012 --> 00:05:49,025
I, I'm gonna predict theta

163
00:05:49,060 --> 00:05:54,073
J transpose XI, where

164
00:05:55,006 --> 00:05:55,099
X and theta are the parameters

165
00:05:56,058 --> 00:05:58,023
that I've learned from this mean normalized data set.

166
00:05:59,018 --> 00:06:00,068
But, because on the data

167
00:06:00,094 --> 00:06:02,025
set, I had subtracted off the

168
00:06:02,032 --> 00:06:04,000
means in order to make

169
00:06:04,004 --> 00:06:05,020
a prediction on movie i,

170
00:06:05,050 --> 00:06:07,022
I'm going to need to add back in the mean,

171
00:06:08,006 --> 00:06:08,073
and so i'm going to add

172
00:06:08,083 --> 00:06:10,068
back in mu i. And

173
00:06:10,082 --> 00:06:11,077
so that's going to be

174
00:06:11,082 --> 00:06:13,035
my prediction where in my training

175
00:06:13,066 --> 00:06:14,086
data subtracted off all the

176
00:06:14,093 --> 00:06:16,029
means and so when we

177
00:06:16,043 --> 00:06:20,076
make predictions and we need

178
00:06:21,076 --> 00:06:23,002
to add back in these

179
00:06:23,041 --> 00:06:23,087
means mu i for movie i.  And

180
00:06:24,010 --> 00:06:25,031
so specifically if you user

181
00:06:25,032 --> 00:06:26,083
5 which is Eve, the same argument as

182
00:06:27,000 --> 00:06:28,025
the previous slide still applies in

183
00:06:28,043 --> 00:06:29,087
the sense that Eve had

184
00:06:30,007 --> 00:06:31,060
not rated any movies and

185
00:06:31,075 --> 00:06:32,093
so the learned parameter for

186
00:06:33,070 --> 00:06:35,002
user 5 is still going to

187
00:06:35,097 --> 00:06:37,099
be equal to 0, 0.

188
00:06:38,026 --> 00:06:39,091
And so what we're

189
00:06:40,012 --> 00:06:41,031
going to get then is that

190
00:06:41,068 --> 00:06:42,098
on a particular movie i we're

191
00:06:43,012 --> 00:06:44,089
going to predict for Eve theta

192
00:06:45,048 --> 00:06:49,093
5, transpose xi plus

193
00:06:51,025 --> 00:06:52,088
add back in mu i and

194
00:06:53,000 --> 00:06:54,036
so this first component is

195
00:06:54,045 --> 00:06:57,051
going to be equal to zero, if theta five is equal to zero.

196
00:06:58,029 --> 00:06:59,018
And so on movie i, we

197
00:06:59,025 --> 00:07:00,066
are going to end a predicting mu

198
00:07:01,008 --> 00:07:03,018
i. And, this actually makes sense.

199
00:07:03,037 --> 00:07:03,068
It means that

200
00:07:03,089 --> 00:07:05,026
on movie 1 we're

201
00:07:05,038 --> 00:07:06,099
going to predict Eve rates it 2.5.

202
00:07:07,026 --> 00:07:10,025
On movie 2 we're gonna predict Eve rates it 2.5.

203
00:07:10,042 --> 00:07:11,063
On movie 3 we're

204
00:07:11,087 --> 00:07:13,000
gonna predict Eve rates it at 2

205
00:07:13,019 --> 00:07:14,050
and so on.

206
00:07:14,077 --> 00:07:15,095
This actually makes sense, because it says

207
00:07:16,031 --> 00:07:17,073
that if Eve hasn't rated

208
00:07:18,001 --> 00:07:18,087
any movies and we just

209
00:07:19,010 --> 00:07:20,018
don't know anything about this new

210
00:07:20,041 --> 00:07:21,062
user Eve, what we're going

211
00:07:21,081 --> 00:07:23,076
to do is just predict for

212
00:07:23,093 --> 00:07:25,013
each of the movies, what are

213
00:07:25,023 --> 00:07:27,051
the average rating that those movies got.

214
00:07:30,006 --> 00:07:31,048
Finally, as an aside, in

215
00:07:31,081 --> 00:07:33,029
this video we talked about mean

216
00:07:33,054 --> 00:07:35,022
normalization, where we normalized

217
00:07:35,031 --> 00:07:36,044
each row of the matrix y,

218
00:07:37,050 --> 00:07:38,010
to have mean 0.

219
00:07:39,001 --> 00:07:40,073
In case you have some movies

220
00:07:41,001 --> 00:07:42,032
with no ratings, so it is

221
00:07:42,058 --> 00:07:44,031
analogous to a user who hasn't rated anything,

222
00:07:44,058 --> 00:07:45,055
but in case you have some

223
00:07:46,025 --> 00:07:47,052
movies with no ratings, you

224
00:07:47,058 --> 00:07:48,069
can also play with versions

225
00:07:49,031 --> 00:07:50,069
of the algorithm, where you

226
00:07:50,089 --> 00:07:52,018
normalize the different columns

227
00:07:52,079 --> 00:07:53,099
to have means zero, instead of

228
00:07:54,027 --> 00:07:55,018
normalizing the rows to have mean

229
00:07:55,050 --> 00:07:56,099
zero, although that's maybe

230
00:07:57,024 --> 00:07:58,076
less important, because if you

231
00:07:58,087 --> 00:07:59,081
really have a movie with no

232
00:08:00,004 --> 00:08:01,038
rating, maybe you just

233
00:08:01,058 --> 00:08:03,092
shouldn't recommend that movie to anyone, anyway.

234
00:08:04,069 --> 00:08:08,000
And so, taking

235
00:08:08,054 --> 00:08:09,098
care of the case of a user who hasn't

236
00:08:10,049 --> 00:08:11,077
rated anything might be more

237
00:08:12,000 --> 00:08:13,017
important than taking care of

238
00:08:13,031 --> 00:08:14,055
the case of a movie

239
00:08:14,086 --> 00:08:16,008
that hasn't gotten a single rating.

240
00:08:18,093 --> 00:08:20,007
So to summarize, that's how

241
00:08:20,036 --> 00:08:21,082
you can do mean normalization as

242
00:08:22,011 --> 00:08:25,011
a sort of pre-processing step for collaborative filtering.

243
00:08:25,074 --> 00:08:26,067
Depending on your data set,

244
00:08:26,095 --> 00:08:28,013
this might some times make your implementation

245
00:08:28,054 --> 00:08:30,004
work just a little bit better.
