
1
00:00:00,009 --> 00:00:00,095
In this and the next few

2
00:00:01,007 --> 00:00:02,000
videos, I want to tell

3
00:00:02,016 --> 00:00:03,041
you about a machine learning application

4
00:00:04,001 --> 00:00:04,098
example, or a machine

5
00:00:05,016 --> 00:00:07,067
learning application history centered

6
00:00:08,002 --> 00:00:09,063
around an application called Photo OCR  .

7
00:00:10,051 --> 00:00:11,073
There are three reasons

8
00:00:12,016 --> 00:00:13,022
why I want to do this,

9
00:00:13,048 --> 00:00:14,034
first I wanted to show you an

10
00:00:14,076 --> 00:00:15,069
example of how a complex

11
00:00:16,028 --> 00:00:18,000
machine learning system can be put together.

12
00:00:19,035 --> 00:00:20,096
Second, once told the concepts of

13
00:00:21,017 --> 00:00:22,028
a machine learning a type line

14
00:00:22,096 --> 00:00:24,073
and how to allocate resources when

15
00:00:24,085 --> 00:00:26,055
you're trying to decide what to do next.

16
00:00:26,078 --> 00:00:27,069
And this can either be in

17
00:00:27,073 --> 00:00:28,094
the context of you working

18
00:00:29,037 --> 00:00:30,021
by yourself on the big

19
00:00:30,050 --> 00:00:31,069
application Or it can

20
00:00:31,076 --> 00:00:32,097
be the context of a team

21
00:00:33,010 --> 00:00:34,018
of developers trying to build

22
00:00:34,043 --> 00:00:35,092
a complex application together.

23
00:00:37,003 --> 00:00:38,067
And then finally, the Photo

24
00:00:39,013 --> 00:00:40,068
OCR problem also gives

25
00:00:40,088 --> 00:00:41,081
me an excuse to tell you

26
00:00:41,088 --> 00:00:42,085
about just a couple more interesting

27
00:00:43,025 --> 00:00:44,036
ideas for machine learning.

28
00:00:45,011 --> 00:00:47,029
One is some ideas of

29
00:00:47,039 --> 00:00:48,025
how to apply machine learning to

30
00:00:48,060 --> 00:00:50,021
computer vision problems, and second

31
00:00:50,034 --> 00:00:51,089
is the idea of artificial data

32
00:00:52,021 --> 00:00:53,088
synthesis, which we'll see in a couple of videos.

33
00:00:54,082 --> 00:00:57,067
So, let's start by talking about what is the Photo OCR problem.

34
00:01:00,013 --> 00:01:01,071
Photo OCR stands for

35
00:01:02,004 --> 00:01:03,075
Photo Optical Character Recognition.

36
00:01:05,018 --> 00:01:06,045
With the growth of digital photography

37
00:01:07,029 --> 00:01:08,073
and more recently the growth of

38
00:01:09,007 --> 00:01:10,035
camera in our cell phones

39
00:01:11,014 --> 00:01:12,014
we now have tons of visual

40
00:01:12,050 --> 00:01:13,079
pictures that we take all over the place.

41
00:01:14,062 --> 00:01:15,070
And one of the things that

42
00:01:16,015 --> 00:01:17,084
has interested many developers is

43
00:01:18,007 --> 00:01:19,068
how to get our computers to

44
00:01:19,098 --> 00:01:22,029
understand the content of these pictures a little bit better.

45
00:01:23,014 --> 00:01:24,068
The photo OCR problem focuses

46
00:01:25,029 --> 00:01:26,079
on how to get computers to

47
00:01:26,098 --> 00:01:29,039
read the text to the purest in images that we take.

48
00:01:30,073 --> 00:01:31,098
Given an image like this it

49
00:01:32,006 --> 00:01:32,084
might be nice if a computer

50
00:01:33,053 --> 00:01:34,048
can read the text in this

51
00:01:34,067 --> 00:01:35,054
image so that if you're

52
00:01:35,065 --> 00:01:37,004
trying to look for this

53
00:01:37,021 --> 00:01:38,053
picture again you type in

54
00:01:38,084 --> 00:01:40,021
the words, lulu bees and

55
00:01:41,000 --> 00:01:42,090
and have it automatically pull

56
00:01:43,012 --> 00:01:44,018
up this picture, so that

57
00:01:44,035 --> 00:01:45,089
you're not spending lots of

58
00:01:45,098 --> 00:01:47,012
time digging through your photo

59
00:01:47,067 --> 00:01:49,023
collection Maybe hundreds of

60
00:01:49,048 --> 00:01:50,073
thousands of pictures in.

61
00:01:50,087 --> 00:01:53,009
The Photo OCR problem

62
00:01:53,045 --> 00:01:56,007
does exactly this, and it does so in several steps.

63
00:01:56,087 --> 00:01:57,079
First, given the picture it

64
00:01:58,006 --> 00:01:58,079
has to look through the image

65
00:01:59,048 --> 00:02:01,068
and detect where there is text in the picture.

66
00:02:03,001 --> 00:02:03,095
And after it has done

67
00:02:04,015 --> 00:02:05,034
that or if it successfully does

68
00:02:05,056 --> 00:02:06,075
that it then has to

69
00:02:06,098 --> 00:02:09,002
look at these text regions and

70
00:02:09,016 --> 00:02:10,053
actually read the text in

71
00:02:10,066 --> 00:02:12,015
those regions, and hopefully if

72
00:02:12,025 --> 00:02:13,066
it reads it correctly, it'll come

73
00:02:15,003 --> 00:02:16,043
up with these transcriptions of

74
00:02:16,080 --> 00:02:18,071
what is the text that appears in the image.

75
00:02:19,047 --> 00:02:21,015
Whereas OCR, or optical

76
00:02:21,043 --> 00:02:22,084
character recognition of scanned

77
00:02:23,059 --> 00:02:25,075
documents is relatively easier

78
00:02:26,018 --> 00:02:27,084
problem, doing OCR from

79
00:02:27,097 --> 00:02:29,047
photographs today is still a

80
00:02:29,075 --> 00:02:30,096
very difficult machine learning problem,

81
00:02:31,063 --> 00:02:32,072
and you can do this.

82
00:02:33,000 --> 00:02:34,031
Not only can this help

83
00:02:34,075 --> 00:02:36,038
our computers to understand the

84
00:02:36,044 --> 00:02:38,037
content of our though

85
00:02:38,050 --> 00:02:40,003
images better, there are

86
00:02:40,024 --> 00:02:42,024
also applications like helping blind

87
00:02:42,053 --> 00:02:43,090
people, for example, if you

88
00:02:44,000 --> 00:02:45,000
could provide to a blind person

89
00:02:45,078 --> 00:02:47,021
a camera that can look

90
00:02:47,046 --> 00:02:48,043
at what's in front of

91
00:02:48,053 --> 00:02:49,069
them, and just tell them the

92
00:02:49,090 --> 00:02:52,099
words that my be on

93
00:02:53,046 --> 00:02:55,083
the street sign in front of them.

94
00:02:56,053 --> 00:02:57,078
With car navigation systems.

95
00:02:58,031 --> 00:02:59,075
For example, imagine if your

96
00:02:59,091 --> 00:03:00,090
car could read the street

97
00:03:01,025 --> 00:03:03,047
signs and help you navigate to your destination.

98
00:03:04,061 --> 00:03:07,025
In order to perform photo OCR, here's what we can do.

99
00:03:07,096 --> 00:03:08,084
First we can go through the

100
00:03:09,008 --> 00:03:11,049
image and find the regions where there's text and image.

101
00:03:11,084 --> 00:03:13,037
So, shown here is

102
00:03:13,058 --> 00:03:15,043
one example of text and

103
00:03:15,072 --> 00:03:17,069
image that the photo OCR system may find.

104
00:03:19,097 --> 00:03:21,084
Second, given the rectangle around

105
00:03:22,021 --> 00:03:23,038
that text region, we can

106
00:03:23,069 --> 00:03:25,093
then do character segmentation, where

107
00:03:26,016 --> 00:03:28,021
we might take this text box

108
00:03:28,049 --> 00:03:30,031
that says "Antique Mall" and

109
00:03:30,053 --> 00:03:31,075
try to segment it out

110
00:03:32,009 --> 00:03:34,015
into the locations of the individual characters.

111
00:03:35,044 --> 00:03:37,028
And finally, having segmented out

112
00:03:37,044 --> 00:03:39,005
into individual characters, we can

113
00:03:39,031 --> 00:03:41,003
then run a crossfire, which

114
00:03:41,028 --> 00:03:42,094
looks at the images of the

115
00:03:43,009 --> 00:03:44,062
visual characters, and tries to

116
00:03:44,075 --> 00:03:45,099
figure out the first character's an

117
00:03:46,015 --> 00:03:47,006
A, the second character's an

118
00:03:47,022 --> 00:03:48,000
N, the third character is

119
00:03:48,047 --> 00:03:49,093
a T, and so on,

120
00:03:50,011 --> 00:03:51,012
so that up by doing all

121
00:03:51,018 --> 00:03:52,034
this how that hopefully you can then

122
00:03:52,053 --> 00:03:53,061
figure out that this phrase

123
00:03:54,018 --> 00:03:55,066
is Rulegee's antique mall

124
00:03:56,034 --> 00:03:57,075
and similarly for some of

125
00:03:57,093 --> 00:04:01,068
the other words that appear in that image.

126
00:04:01,097 --> 00:04:02,038
I should say that there are some photo OCR systems

127
00:04:02,090 --> 00:04:04,034
that do even more complex things,

128
00:04:04,068 --> 00:04:06,037
like a bit of spelling correction at the end.

129
00:04:06,063 --> 00:04:08,046
So if, for example, your

130
00:04:08,071 --> 00:04:10,072
character segmentation and character

131
00:04:11,011 --> 00:04:12,044
classification system tells you

132
00:04:12,068 --> 00:04:14,038
that it sees the

133
00:04:14,053 --> 00:04:16,005
word c 1 e a

134
00:04:16,025 --> 00:04:17,093
n i n g. Then,

135
00:04:18,035 --> 00:04:19,056
you know, a sort of spelling

136
00:04:19,075 --> 00:04:21,091
correction system might tell

137
00:04:22,024 --> 00:04:23,026
you that this is probably the

138
00:04:23,035 --> 00:04:24,087
word 'cleaning', and your

139
00:04:25,033 --> 00:04:27,016
character classification algorithm had

140
00:04:27,031 --> 00:04:29,064
just mistaken the l for a 1.

141
00:04:30,037 --> 00:04:31,031
But for the purpose of what

142
00:04:31,063 --> 00:04:32,050
we want to do in

143
00:04:32,062 --> 00:04:33,098
this video, let's ignore this last

144
00:04:34,062 --> 00:04:35,077
step and just focus on the

145
00:04:36,011 --> 00:04:37,049
system that does these three

146
00:04:37,069 --> 00:04:39,033
steps of text detection, character

147
00:04:39,066 --> 00:04:41,004
segmentation, and character classification.

148
00:04:42,041 --> 00:04:43,079
A system like this is

149
00:04:44,007 --> 00:04:46,000
what we call a machine learning pipeline.

150
00:04:47,055 --> 00:04:49,022
In particular, here's a picture

151
00:04:49,094 --> 00:04:52,022
showing the photo OCR pipeline.

152
00:04:53,013 --> 00:04:54,019
We have an image, which then

153
00:04:54,047 --> 00:04:57,058
fed to the text detection system

154
00:04:57,097 --> 00:04:58,095
text regions, we then segment

155
00:04:59,042 --> 00:05:01,035
out the characters--the individual characters in

156
00:05:01,042 --> 00:05:04,036
the text--and then finally we recognize the individual characters.

157
00:05:05,073 --> 00:05:07,018
In many complex machine learning

158
00:05:07,080 --> 00:05:09,005
systems, these sorts of

159
00:05:09,049 --> 00:05:11,039
pipelines are common, where you

160
00:05:11,066 --> 00:05:13,044
can have multiple modules--in this

161
00:05:13,068 --> 00:05:14,095
example, the text detection, character

162
00:05:15,038 --> 00:05:17,081
segmentation, character recognition modules--each of

163
00:05:17,093 --> 00:05:19,017
which may be machine learning component,

164
00:05:19,087 --> 00:05:20,074
or sometimes it may not

165
00:05:20,098 --> 00:05:22,066
be a machine learning component but

166
00:05:22,081 --> 00:05:23,066
to have a set of modules

167
00:05:24,029 --> 00:05:26,005
that act one after another on

168
00:05:26,027 --> 00:05:27,077
some piece of data in order

169
00:05:28,010 --> 00:05:29,017
to produce the output you want,

170
00:05:29,063 --> 00:05:30,093
which in the photo OCR example

171
00:05:31,057 --> 00:05:32,068
is to find the

172
00:05:32,080 --> 00:05:35,005
transcription of the text that appeared in the image.

173
00:05:35,073 --> 00:05:37,037
If you're designing a machine learning

174
00:05:37,070 --> 00:05:39,008
system one of the

175
00:05:39,019 --> 00:05:41,000
most important decisions will often

176
00:05:41,032 --> 00:05:44,035
be what exactly is the pipeline that you want to put together.

177
00:05:44,097 --> 00:05:46,000
In other words, given the photo

178
00:05:46,052 --> 00:05:47,093
OCR problem, how do you

179
00:05:47,099 --> 00:05:49,038
break this problem down into

180
00:05:49,076 --> 00:05:51,022
a sequence of different modules.

181
00:05:51,068 --> 00:05:53,006
And you design the pipeline

182
00:05:53,081 --> 00:05:56,006
and each the performance of each of the modules in your pipeline.

183
00:05:56,066 --> 00:05:57,061
will often have a big

184
00:05:57,070 --> 00:05:59,087
impact on the final performance of your algorithm.

185
00:06:01,048 --> 00:06:02,032
If you have a team of

186
00:06:02,055 --> 00:06:03,061
engineers working on a

187
00:06:03,080 --> 00:06:05,014
problem like this is also very

188
00:06:05,045 --> 00:06:06,089
common to have different

189
00:06:07,033 --> 00:06:08,072
individuals work on different modules.

190
00:06:09,050 --> 00:06:11,048
So I could easily imagine tech

191
00:06:12,013 --> 00:06:13,024
easily being the of anywhere

192
00:06:13,067 --> 00:06:14,061
from 1 to 5 engineers,

193
00:06:15,045 --> 00:06:16,097
character segmentation maybe another

194
00:06:17,047 --> 00:06:19,000
1-5 engineers, and character

195
00:06:19,022 --> 00:06:20,055
recognition being another 1-5

196
00:06:21,067 --> 00:06:23,010
engineers, and so having a

197
00:06:23,033 --> 00:06:24,085
pipeline like often offers a

198
00:06:25,027 --> 00:06:26,072
natural way to divide up

199
00:06:27,011 --> 00:06:30,037
the workload amongst different members of an engineering team, as well.

200
00:06:31,004 --> 00:06:31,097
Although, or course, all of

201
00:06:32,008 --> 00:06:33,020
this work could also be done

202
00:06:33,044 --> 00:06:35,091
by just one person if that's how you want to do it.

203
00:06:39,008 --> 00:06:40,037
In complex machine learning systems

204
00:06:41,033 --> 00:06:42,069
the idea of a pipeline, of

205
00:06:42,087 --> 00:06:44,076
a machine of a pipeline, is pretty pervasive.

206
00:06:45,081 --> 00:06:47,006
And what you just saw is

207
00:06:47,039 --> 00:06:49,018
a specific example of how

208
00:06:49,043 --> 00:06:51,027
a Photo OCR pipeline might work.

209
00:06:52,023 --> 00:06:53,058
In the next few videos I'll

210
00:06:53,074 --> 00:06:54,058
tell you a little bit more

211
00:06:54,064 --> 00:06:55,077
about this pipeline, and we'll continue

212
00:06:56,029 --> 00:06:57,017
to use this as an example

213
00:06:58,012 --> 00:06:59,086
to illustrate--I think--a few more

214
00:07:00,027 --> 00:07:01,039
key concepts of machine learning.
